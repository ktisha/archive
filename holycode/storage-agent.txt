Storage agent

Агент хранилища может расополагаться на компьютере обычных пользователей.
Поэтому
Необходимо учесть возможность неожиданного завершения агента.
После такого сбоя, необходимо заново загрузиться, и помнить какие файлы он хранит.
Возможно некоторые загруженные ранее файлы могут быть потерянными (их просто потер пользователь)

Агент должен быть параллельным.
Должен иметь возможность одновременно и закачивать на себя файлы,
и отдавать, и проверять наличие и целостность файлов, которые были на него прежде залиты.
(возможно в будущем, необходимо будет считать хэш, дабы убедиться, что файл в целостности.)

Агент ведет себя пассивно, все что ему надо, это отвечать на запросы сервера.
Вся ответственность лежит на сервере, надо просто выполнять запросы сервера.

action free-space
необходимо ответить о количестве свободного места на хранилище.
(для начала, просто пусть это будет параметром программы)

action check
на этот запрос хранилище должно ответить, что у него хранится.
При чем необходимо проверить наличие файлов, которые должны быть на хранилище.
Если каких-то фалов нет, не беда, просто забудь о них.

action download
На это действие необходимо проверить целостность запрашиваемого файла.
Ответить цел он или нет. Если все ок, просто отдавать файл.
В запросе возможен тег offset это просто смещение в байтах от начала файла, с которго следует отдавать файл.
(эта возможность реализует дозакачку файла в случае обрыва связи)

action upload
Дейсвтие заливки файла на хранилище. Необходимо ответить о готовности принять файл такого размера.
Если присутствует тег offset. значит этот файл уже закачивался, но произошел обрыв связи или еще чего.
(дозакачка пока не к спеху)

Пример xml запроса.
в запросе меожет быть только одно действие

<agent-request>

  <!-- not use yet -->
  <key> </key>  

  <!-- download, upload, remove, check, free-space -->
  <action> </action>

  <download>
    <file-name> </file-name>
    <offset> </offset>
  </download>  

  <upload>
    <file-name> </file-name>
    <size> </size>
    <offset> </offset>
  </upload>  

  <remove>
    <file-name> </file-name>
  </remove>

</agent-request>


<server-response>
</server-response>
