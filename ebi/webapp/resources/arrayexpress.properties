# arrayexpress preferences file
#

# smtp server for sending email reports
app.reports.smtp.server                 = smtp.ebi.ac.uk

# originator ("from") for email reports
app.reports.originator                  = "ArrayExpress Archive" <arrayexpress@ebi.ac.uk>

# recipients of reports
app.reports.recipients                  = kolais@ebi.ac.uk

ae.experiments.exist.dbhome             = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-exist

# comma-separated list of databases to retrieve experiments from (the name should match the jdbc resource defined in context)
ae.experiments.db.datasources           = ${interface.application.pref.experiments.datasources}

# xml source file location (for ae2)
ae.experiments.fs.source.location       = ${interface.application.pref.experiments.filesource.location}

# where should we aim to look for data ('db' or 'fs')?
ae.experiments.source.type              = db

# the location of ArrayExpress Experiments XML persistence file (relative to java.io.tmpdir, e.g. tomcat temp directory)
ae.experiments.file.location            = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-experiments.xml

# do not reload experiments at start of the application
ae.experiments.reload.atstart           = false

# do reload experiments daily at 06:00:00 (for production) 0 0 6 * * ?
ae.experiments.reload.schedule          = ${interface.application.pref.experiments.reload.schedule}

# how many threads will be used for parallel reload
ae.experiments.reload.threads           = 25

# the location of ArrayExpress Experiments XML source file
ae.experiments.reload.src.file.location = ${interface.application.pref.experiments.reload.src.file.location}

# the location of ArrayExpress XML source files
ae.reload.xml.file.location = ${interface.application.pref.reload.xml.file.location}

# comma-separated list of databases to retrieve atlas experiments from (the name should match the jdbc resource defined in context)
ae.atlasexperiments.datasources         = dwp.smithers, dwp.otto

# the location of list of experiments that present in the atlas
ae.atlasexperiments.file.location       = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-atlas-experiments.txt

# do not reload atlas experiments on start of the application
ae.atlasexperiments.reload.atstart      = false

# do reload atlas experiments daily at 06:00:00 (for production) 0 0 6 * * ?
ae.atlasexperiments.reload.schedule     = ${interface.application.pref.experiments.reload.schedule}

ae.species.file.location                = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-species.txt
ae.arraylist.file.location              = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-arrays.txt
ae.exptypes.file.location               = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-experiment-types.txt
ae.users.file.location                  = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-users.txt

ae.files.root.location                  = ${interface.application.pref.files.root.location}
ae.files.persistence.file.location      = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-files.xml

# rescan files (in ms)
ae.files.rescan.interval                = ${interface.application.pref.files.rescan.interval}

# location of temporary efo lookup index
ae.efo.index.location                   = ${sys:java.io.tmpdir}/index/efo

# synonmym dictionaries (in addition to what EFO has provided), relative to "resources" directory
ae.synonmym.file.name                   = uk_us_synonyms.txt, misc_synonyms.txt

ae.protocols.file.location              = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-protocols.xml
ae.arrays.file.location                 = ${sys:java.io.tmpdir}/${interface.application.pref.files.prefix}-arrays.xml