package tuzova.finiteStateMachine.sandbox.sandbox;

/*Generated by MPS */


public class myFSMachine {

  private State myCurrentState;

  public myFSMachine() {
  }

  public State eval(State init, Event[] events) {
    this.myCurrentState = init;
    Event event;
    for(int i = 0 ; i != events.length ; ++i) {
      event = events[i];
      switch (this.myCurrentState) {
        case state:
          switch (event) {
            case event:
              this.myCurrentState = State.state;
              break;
            case event1:
              this.myCurrentState = State.state1;
              break;
            case event2:
              this.myCurrentState = State.state;
              break;
            default:
              break;
          }
        case state1:
          switch (event) {
            case event:
              this.myCurrentState = State.state1;
              break;
            case event1:
              this.myCurrentState = State.state;
              break;
            case event2:
              this.myCurrentState = State.state;
              break;
            default:
              break;
          }
        default:
          break;
      }
    }
    return this.myCurrentState;
  }


  public static void main(String[] args) {
  }

<!TextGen not found for 'jetbrains.mps.baseLanguage.structure.Classifier'!>
}
