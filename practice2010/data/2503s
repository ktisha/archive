<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" lang="ru">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>

<meta name="sprypayUrlChecker" content="sprypay_fpraOIA7CnzFuVkwTFol4GEMpK3RdzExgx4SCKayofR7wwGQvRBfNE2QUww9JV84_1763">

<title>Развитие системы стохастического тестирования микропроцессоров integ</title>     <style>
	 .sps {
        padding-left: 20px;
        line-height: 20px;
	   padding:1px;
	   margin:0px;
     }

     .hed {
       color: #666666;
       font: bold;
       font-size: 14px;
       border: 1px solid;
	   padding:1px;
	   margin:0px;
     }

     .trhed {
       padding: 25px;
     }
	 
	 .td_arch {
	   margin:0px;
	   padding:5px;
	  }
	 
	 .in_journal {
	  border:3px solid #fff;
	 }

	 .in_journal:hover {
	  border:3px solid #aaaaaa;
	 }
	 
     .ndisp {
         display:none;
     }
     
	  </style>

<!--[if IE]>
<style>
.outer, .wrapper, .minwidth {
	zoom: 1;
}

</style>
<![endif]-->

<!--[if lt IE 7]>
<style>
.minwidth {
	border-left: 504px solid #fff;
}
.wrapper {
	margin-left: -504px;
	position: relative;
}
</style>
<![endif]-->

<link href="css/layout_2col_right_31.css" rel="stylesheet" type="text/css"/>	  

<link href="style.css" type="text/css" rel="stylesheet" />
<link rel="alternate" type="application/rss+xml" title="RSS" href="http://www.swsys.ru/rss">

<!--[if lte IE 7]>
<link href="css/patches/patch_2col_right_31.css" rel="stylesheet" type="text/css" />
<![endif]-->

    <script src="script/CalendarPopup.js"></script>


<script>

function submit_login() {
 if ( document.login_form.login.value != "" && document.login_form.password.value != "" ) { 
  document.login_form.activity.value = "AUTORIZ";
  document.login_form.submit();
  }
 else 
 {
 alert("Введите логин и пароль"); 
 document.login_form.username.focus();
 }
 
}

 function to_registry() {
	document.login_form.action = "event.php?page=registry";
    document.login_form.submit();
 }

 function to_search() {
    document.search_form.submit();
 }

</script>

</head>
<body>








<div id="page_margins">
	<div id="page">
		<div id="header">
			<div id="topnav">
				  <form action="event.php?page=search&order=date"  method="post" id="search-theme-form" name="search_form">
<div><div id="search" class="container-inline"><div class="form-item">
 <input type="text" maxlength="128" name="search" id="edit-search-theme-form-keys"  size="15" value="поиск..." title="Введите слова для поиска." class="form-text" onBlur="if ( this.value == '' ) this.value = 'поиск...';" onFocus="if ( this.value=='поиск...' ) this.value='';"/>
 <a href="#" onclick="Javascript: if ( document.search_form.search.value == 'поиск...' ) { alert('Введите поисковый запрос!') } else document.search_form.submit()">Найти</a>
</div>
</div>
</div></form>
				<div id="subsearch"><span><a href="index.php?page=extsearch">Расширенный поиск</a> / <a href="index.php?page=sitemap">Карта сайта</a></span></div> </div>
			<span style="cursor:pointer" onclick="Javascript:document.location = 'index.php'" class="zag">Международный журнал</span>
			<h1 style="cursor:pointer; width:auto" onclick="Javascript:document.location = 'index.php'">Программные продукты и системы</h1>
		   
			</div>
		<!-- begin: main navigation #nav -->
		<div id="nav"> <a id="navigation" name="navigation"></a>
			<!-- skiplink anchor: navigation -->			
		</div>
		<!-- end: main navigation -->
		<!-- begin: main content area #main -->
		<div id="main">
			<!-- begin: #col1 - first float column -->
			<div id="col1">
				<div id="col1_content" class="clearfix">
					<div id="menu" class="r-block">
						<h2>Разделы сайта</h2>
						<ul id="submenu">
						
						<li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=1">О журнале</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=3">Редколлегия</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=12">Научные направления</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=9">Свежий выпуск</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=19">Список авторов выпуска</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=10">Архив выпусков</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=11">Подписка</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=5">Авторам и издателям</a></li>						
					  </ul>	
					</div>	

     
					<div id="login" class="mainborder r-block">
                    
                    <h2>Вход</h2>				
				   <form action="event.php?page=article"  method="post" id="login-form" name="login_form">
<div id="login-form-div">
	<div class="form-item"><input type="text" maxlength="128" name="login" size="15" value="" title="" class="form-text" /></div>
 <div class="form-item"><input type="password" maxlength="128" name="password" size="15" value="" title="" class="form-text"/></div>
 <input type="hidden" name="activity" />
 
        <label for="save_pas"><input type="checkbox" style="width:25px;border:none;" name="save_pas" id="save_pas" />Запомнить</label><br />

  <div id="login-button"><input style="border:none;width:46px;height:45px" type="image" src="images/login-button1.gif" onclick="submit_login();"></div> 
<!-- <input type="submit" /> -->
</div></form>
				 
				<span><a href="index.php?page=recovery">Забыли пароль?</a> / <a href="#" onclick="to_registry();">Регистрация</a></span>				  
                         
                 

                 
                 
				  </div>


                  
                  

           
  
  <div style="padding: 5px 0px 0px 45px">     
<script type="text/javascript"><!--
google_ad_client = "pub-6573451237838679";
/* Вторая страница право */
google_ad_slot = "0208394776";
google_ad_width = 120;
google_ad_height = 240;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>                  
     </div>
     
      
				  
				  
				                    <div id="next-after" class="r-block">
                    <h2>Добавить в закладки</h2>
                    <script src="/ok2.js" type="text/javascript"></script>
                  </div>
                  
				  <div id="next-after" class="r-block">
					<h2>Следующий номер</h2>
					<div id="sled-nomer" class="floatbox"><span class="simv-nomer">№</span>1</div>
					<div id="sled-nomer-text">
					Выходит:<br/>
					<div> 18 Марта 2011 </div>
                     				  </div>
				 </div>
				  <div class="r-block" id="arh">
					<h2>Выпуски</h2>

 						<div class="god">2010</div><ul><li><a href="index.php?page=search&order=date&journal=92">№4 Декабрь 2010</a></li><li><a href="index.php?page=search&order=date&journal=91">№3 Сентябрь 2010</a></li><li><a href="index.php?page=search&order=date&journal=90">№2 Май 2010</a></li><li><a href="index.php?page=search&order=date&journal=89">№1 Март 2010</a></li></ul>
				
						<div align="center" style="margin-top:0px; padding:0px" ><a style="font-size:12px" href="index.php?page=10">все выпуски</a></div>
						<div align="center" style="margin-top:0px; padding:0px" ><a style="font-size:12px" href="index.php?page=all_article">все статьи</a></div>
				  </div>
				  
				  
				</div>

                  <div id="next-after" class="r-block">
                    <h2>Новости</h2>  
                                 
                        <p>     
                        <a href="index.php?page=show_news&id=117">В Международном университете природы, общества и человека (г. Дубна) предложен алгоритм генерации растущих сетей с нелинейным предпочтительным присоединением, конкуренцией и удалением узлов</a> [15.12.2010]
                        <br/>
                                     
                        <p>     
                        <a href="index.php?page=show_news&id=116">В Группе компаний «Генезис знаний» (г. Самара) предложено решение по построению и внедрению мультиагентной системы распределения производственных ресурсов МАС «Оптимизатор»</a> [08.12.2010]
                        <br/>
                                     
                        <p>     
                        <a href="index.php?page=show_news&id=115">В Волгоградском государственном техническом университете разработана модель обучающей системы в области автомобильного транспорта</a> [01.12.2010]
                        <br/>
                                                
                        <div style="text-align:center"><a href="index.php?page=show_news">читать все новости</a></div>
                        
                                          </div>

					<div class="r-block" style="text-align:center;padding:0px;margin:0px;">
					   <a style="text-decoration:none;" href="rss/"><img alt="RSS" title="RSS" src="images/rss.gif"/><br/>
						<div style="text-decoration:underline;display:inline">Подписаться на RSS</div></a>
					</div>
                    
                  

			</div>

       

			<!-- end: #col1 -->
			<!-- begin: #col3 static column -->
			<div id="col3">
				<div id="col3_content" class="clearfix"> <a id="content" name="content"></a>





<script>

            function go_event_comment(act, id)
            {
                 document.s_article.activity.value = act;
                 document.s_article.id.value = id;
                document.s_article.submit();
            }


            function go_event_vote(act, id)
            {
                 document.v_article.activity.value = act;
                 document.v_article.id.value = id;
                document.v_article.submit();
            }
            
            
</script>

<h2 style="margin-bottom:3px">Развитие системы стохастического тестирования микропроцессоров integ</h2><div style="margin-bottom:10px"><strong>The development of the system  for microprocessor random testing integ</strong></div>Статья опубликована в выпуске журнала № 2 за 2010 год. [ 27.05.2010 ]<br/><strong>Аннотация:</strong><em style="font-size:8pt">Случайное тестирование является одним из наиболее мощных средств верификации проектов микропроцессоров. Для упрощения генерации случайных тестов и создания инструмента для тестирования процессоров архитектуры MIPS64 была создана система INTEG. После ее использования на протяжении нескольких лет проводилась глубокая модернизация INTEG, результатом которой стал программный комплекс INTEG2. В статье рассматриваются основные своиства и компоненты как INTEG, так и INTEG2, описываются их сходство и различие. Также приводятся некоторые направления дальнейшего развития INTEG2. </em><br /><strong>Abstract:</strong><em style="font-size:8pt">Stochastic testing is one of the most powerful tools for verification of microprocessor design. To simplify the generation of random tests and to create a tool for testing processors of the MIPS64 architecture, the system named INTEG has been developed. After its use for several years, a deep modernization of INTEG has been carried out, resulting in the program complex INTEG2. In the paper the main features of both INTEG and INTEG2, as well as their similarities and dissimilarities, are considered. Also some directions for further development of INTEG2 are finally addressed</em><table border="0" width="100%" style="width:100%;"> 
            <tr>
             <td colspan="2"><b>Авторы: </b><a href="index.php?page=infou&id=4097">Грибков И.В. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва Кандидат физико-математических наук Ph.D., <a href="index.php?page=infou&id=4098">Захаров А.В. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва   , <a href="index.php?page=infou&id=4099">Кольцов П.П. (koltsov@niisi.msk.ru)</a> - НИИСИ РАН, г. Москва Кандидат физико-математических наук Ph.D., <a href="index.php?page=infou&id=4100">Котович Н.В. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва   , <a href="index.php?page=infou&id=4101">Кравченко А.А. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва Кандидат физико-математических наук Ph.D., <a href="index.php?page=infou&id=4102">Куцаев А.С. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва Кандидат физико-математических наук Ph.D., <a href="index.php?page=infou&id=4103">Осипов А.С. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва Кандидат физико-математических наук Ph.D., <a href="index.php?page=infou&id=4104">Хисамбеев И.Ш. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва   , <a href="index.php?page=infou&id=5838">Коганов М.А. (osipa68@yahoo.com)</a> - НИИСИ РАН, г. Москва   </td>            
         </tr> 
            <tr>
             <td><b>Ключевые слова: </b><a href="index.php?page=infotg&id=1502">случайное тестирование</a>, <a href="index.php?page=infotg&id=1504">генерация случайных тестов</a>, <a href="index.php?page=infotg&id=360">верификация</a>, <a href="index.php?page=infotg&id=241">rtl-модель</a>, <a href="index.php?page=infotg&id=1503">MIPS64</a><br /></td> 
           </tr>
            <tr>
             <td><b>Keywords: </b><a href="index.php?page=infotg&id=1502">stochastic testing</a>, <a href="index.php?page=infotg&id=1504">random test generation</a>, <a href="index.php?page=infotg&id=360">verification</a>, <a href="index.php?page=infotg&id=241">RTL model</a>, <a href="index.php?page=infotg&id=1503">MIPS64</a><br /></td> 
           </tr>   

 <tr>
             <td>Средний балл статьи: - <br />Всего комментариев: 0<br />Количество просмотров: 356<br />   
             </td> 
            <td align="right"><a target="_blank" href="/print/article_print.php?id=2503">Версия для печати</a></td>
         </tr>           
          </table>

<br/>

    
    
    <script>
      function set_size(vl) {
         document.getElementById('id_art').style.fontSize = vl;
      }
      function set_font(vl) {
         document.getElementById('id_art').style.fontFamily = "'" + vl + "'";
      }
    </script>
    
      <div style="width:100%;background:#E0E0E0;padding:5px;border:1px solid #D0D0D0">
         <form>
           Размер шрифта:
            <select name="f_size" onchange="set_size(this.value)">
               <option value="10px">10 px</option>
               <option value="12px" selected="selected">12 px</option>
               <option value="14px">14 px</option>
               <option value="16px">16 px</option>
               <option value="18px">18 px</option>
               <option value="24px">24 px</option>
            </select> &nbsp; &nbsp; &nbsp;
           Шрифт:
            <select name="f_name" onchange="set_font(this.value)">
               <option value="Arial">Arial</option>
               <option value="Trebuchet MS" selected="selected">Trebuchet MS</option>
               <option value="Times New Roman">Times New Roman</option>
               <option value="Verdana">Verdana</option>
               <option value="Arial Narrow">Arial Narrow</option>
               <option value="Tahoma">Tahoma</option>
            </select>
            
         </form>
        </div>
         <br />
    <table bgcolor="#FFFFFF"><tr><td><div id="id_art" style="font-size:12px;"><p>При проектировании современных микропроцессорных систем наиболее сложной и актуальной задачей является функциональная верификация проектов. Среди программных средств верификации, используемых на всех стадиях разработки проекта, особое место занимает стохастическое тестирование. Случайные тесты позволяют организовать проверку функционирования проектируемого устройства, в которой направленное тестирование сочетается с широким покрытием проверяемой области. К настоящему времени создано большое число генераторов случайных тестов &ndash; от систем тестирования отдельных компонентов проекта до универсальных систем комплексного тестирования всей архитектуры проекта.</p>
<p>&nbsp;</p>
<p>Для использования случайных тестов требуются минимум две модели целевого устройства. Например, в качестве одной из них берется RTL- (Register Transfer Level) модель процессора, написанная на языках VHDL, Verilog и аналогичных описаний [1]. Для оценки правильности выполнения случайного теста его результаты сравниваются с результатами выполнения на эталонной модели с целью выявления и анализа возможных расхождений.</p>
<p>В данной работе в качестве эталонной модели использовалась покомандная модель процессора, написанная на языке С++.</p>
<p>Интегрируемая система INTEG была разработана в НИИСИ РАН для реализации задачи стохастического тестирования микропроцессоров с архитектурой MIPS64 [2, 3]. Используемый в системе INTEG подход к верификации микропроцессорных средств основан на массовом прогоне тестов на различных моделях микропроцессора (в частности, на RTL и эталонной моделях) и сравнении результатов прогона. Необходимые для этого тесты генерируются по шаблонам.</p>
<p>Для создания шаблонов используется специально созданный графический интерфейс пользователя. В шаблоне заложены широкие возможности случайных вариаций структуры кода, последовательности инструкций и выбора их аргументов. Эти случайные вариации управляемы и  ориентированы на создание ситуаций, представляющих особый интерес. Доля или степень случайности может повышаться по мере развития тестирования для получения более полного набора тестов.</p>
<p>Система INTEG доказала свою полезность при верификации проекта разрабатываемого в НИИСИ РАН микропроцессора архитектуры MIPS64. При этом следует отметить, что в данной системе заложены возможности настройки и на отличные от MIPS64 архитектуры вычислительных систем.  В то же время совершенствование моделей разрабатываемых в НИИСИ РАН микропроцессоров, изменения в организации, сценариях и инструментах тестирования вызвали необходимость проведения серьезной модернизации системы и включения в нее новых элементов. Результатом данной модернизации стал программный комплекс INTEG2, вобравший в себя опыт практического применения системы INTEG и объединяющий средства генерации тестов, настройки и управления процессом тестирования, анализа и хранения результатов. В данной работе описывается опыт практического применения системы INTEG и приводится информация об основных компонентах комплекса INTEG2.</p>
<p>Опыт применения INTEG</p>
<p>Исходная версия системы INTEG включала в себя графическую оболочку Integ, графический редактор шаблонов Guiteg, генератор случайных тестов Tergen, симулятор целевого процессора VMIPS (эталонная модель), симулятор RTL-моде&shy;ли, написанной на языке Verilog, программу сравнения результатов симуляторов.</p>
<p>Чтобы иметь представление о составных частях системы и ее работе в целом, остановимся подробнее на управляющей оболочке. Оболочка Integ представляет собой графический пользовательский интерфейс для работы с программами создания тестов, их выполнения и анализа результатов. Программа оболочки Integ.tcl написана на Tcl/Tk/Tix и должна выполняться на Linux, как и остальные компоненты INTEG (система непосредственно тестировалась на Red Hat Linux 7.3 при установленных пакетах Tcl/Tk &ndash; 8.3, Tix &ndash; 8.2).</p>
<p>После запуска программы графической оболочки на экране монитора появляется ее главная панель (рис. 1) с кнопками запуска каждой из вышеперечисленных программ, а также с основными параметрами их запуска. Вспомогательные параметры каждой из программ устанавливаются при выборе соответствующих кнопок. Рисунок 1 дает представление о последовательных этапах процесса тестирования, которые изображены на главной панели оболочки Integ сверху вниз (на панель вынесены названия этих этапов и даны разделительные линии между ними).</p>
<p><img src="uploaded/image/2010-2/image025.gif" alt="Подпись:  
Рис. 1. Главная панель пользовательского 
интерфейса " width="754" height="400" align="left" />Вначале запускается графический редактор шаблонов (раздел Editor), результатом его работы является файл template.txt. Данный шаблон подается на вход генератора случайных тестов (раздел Tergen), после запуска которого генерируется тестовый файл template.hex. Здесь же данный файл конвертируется в форматы входных файлов симулятора VMIPS и RTL-модели. После этого полученные тестовые файлы template.ram и temp&shy;late.asc запускаются на данных симуляторах (разделы VMIPS и Verilog). В результате получаются файлы протоколов запусков: template_log1.txt и template_log2.txt соответственно, которые сравниваются между собой на заключительном этапе (раздел Compare). Итоговые файлы сравнения в главном окне не видны, доступ к ним можно осуществить, пользуясь кнопкой Compare/Options.</p>
<p>В программе также предусмотрен пакетный режим работы (раздел Multi Run). При подготовке пакетного запуска перечисляются используемые программы и соответствующие файлы данных. Затем пакетное задание можно запустить.</p>
<p>Программы в составе системы INTEG позволяют указывать достаточно большое количество опций. Задавать их каждый раз вручную неудобно, поэтому в программе оболочки предусмотрены загрузка из настроечного файла и сохранение всего набора используемых параметров. Пользователь может сам создавать свои настроечные файлы путем сохранения опций, заданных им в управляющей оболочке.</p>
<p>При разработке системы INTEG была предусмотрена возможность автономного запуска всех компонентов системы независимо от графической оболочки. По мнению практических пользователей, это является ценным качеством системы.</p>
<p>Данная версия системы INTEG нашла успешное применение в НИИСИ РАН при верификации микропроцессора архитектуры MIPS64. При этом разработка системы стохастического тестирования велась параллельно с разработкой процессора на протяжении нескольких лет. За это время тесты значительно усложнились, что, с одной стороны, стало следствием роста возможностей ядра системы Tergen, а с другой &ndash; отвечало процессу разработки процессора (на более поздних этапах проектирования ошибки искать сложнее, следовательно, нужны более сложные тесты).</p>
<p>Рассмотрим шаблон, постоянно запускаемый в течение долгого времени на обновляющемся от запуска к запуску проекте микропроцессора. Естественно предположить, что со временем число найденных шаблоном ошибок будет уменьшаться, при этом время от времени возможен его локальный рост, обусловленный внесением большого количества изменений в тестируемый проект.</p>
<p>При общем запуске системы число найденных ошибок представляет собой сумму по всем шаблонам. Ожидается, что длительное время эта сумма будет поддерживаться на постоянном уровне по трем причинам: во-первых, регулярно начинают применяться новые шаблоны; во-вторых, в проект постоянно вносятся функциональные изменения, каждое из которых добавляет новые ошибки; в-третьих, растет количество используемых для тестирования машинных ресурсов.</p>
<p>На рисунке 2 представлено общее количество ошибок, найденных за два года тестирования. Ошибки разбиты на категории:</p>
<p>1)&nbsp; арифметические (ALU+FPU, ошибки в вычислениях) (категория Arithmetic);</p>
<p>2)&nbsp; подсистемы памяти (команды load/store, cache, TLB) (Memory);</p>
<p>3)&nbsp; исключения, прерывания, системного сопроцессора (Coprocessor/Exceptions);</p>
<p>4)&nbsp; последовательности выполнения команд (Execution sequence).</p>
<p>Очевидно смещение акцента при тестировании в разные периоды. От тестов, исследующих преимущественно исключения, практические пользователи системы INTEG перешли к тестам памяти и лишь на последнем этапе к направленному тестированию последовательности выполнения инструкций.</p>
<p>Приведем два характерных примера ошибок, найденных с помощью системы INTEG.</p>
<p>В одном из случайных тестов была сгенерирована такая комбинация инструкций MIPS64:</p>
<p>lw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r1, 0(r2)</p>
<p>div&nbsp;&nbsp;&nbsp;&nbsp; r3, r1</p>
<p>При ее выполнении процессор останавливал работу. Ошибка возникала из-за конфликта обращения последовательных инструкций к регистру r1, на запись и сразу на чтение.</p>
<p>В другом, более позднем случайном тесте была сгенерирована такая ситуация.</p>
<p>Осуществляется запрос в кэш-память 2-го уровня за следующей инструкцией. Одновременно происходит вызов исключения от одной из предыдущих инструкций. В данной ситуации запрос на инструкцию должен быть отменен на время обработки исключения. Тем не менее, эти события так совпали по времени, что запрос не был корректно отменен. В итоге инструкция загружена неправильно.</p>
<p><img src="uploaded/image/2010-2/image027.gif" alt="Подпись:  
Рис. 2. Общее число ошибок, найденных поквартально
 за два года (по категориям)" width="754" height="327" align="left" />Если первую из описанных ситуаций легко было протестировать вручную, то вторая возникла в результате совпадения нескольких факторов, которые невозможно задать напрямую в программе. Написание такого теста вручную потребовало бы от верификатора на порядок больше усилий и знаний о тонкостях устройства проекта. Возможность массовой генерации подобного рода тестов и является одним из основных достоинств метода стохастического тестирования.</p>
<p>В то же время практическое использование системы выявило и ряд проблем, среди которых недостаточная гибкость системы по отношению к обновлению версий используемых программ (например, симуляторов микропроцессоров) и к настройке операционной среды. Сюда же можно отнести и достаточно жесткую привязанность системы к организации процесса тестирования микропроцессора, сложившейся на момент создания системы. Кроме того, в процессе развития тестирования появились новые требования к функциональным компонентам системы. Эти требования относились как к действующим в первоначальной версии системы компонентам (например, к блоку анализа результатов тестирования), так и к перспективным.</p>
<p>В результате практического применения системы INTEG пользователями были выработаны следующие наиболее существенные пожелания к ее модернизированной версии.</p>
<p>1.&nbsp;&nbsp; Возможность перенастройки системы при модернизации, замене и добавлении новых функциональных компонентов.</p>
<p>2.&nbsp;&nbsp; Работа при разных общих сценариях тестирования и отсутствие жесткой привязки к какому-либо из них. Возможность работы как с созданными ранее, так и с вновь создаваемыми тестами.</p>
<p>3.&nbsp;&nbsp; Повышение удобства в использовании графической оболочки (добавление строки состояния, текстового редактора и т.п.) и ее эргономичности. Создание возможности результативной работы в системе для пользователей различной квалификации.</p>
<p>4.&nbsp;&nbsp; Совершенствование опции пакетной обработки тестов.</p>
<p>5.&nbsp;&nbsp; Автоматизация проверки результатов тестирования с учетом того, что форматы выходных файлов симуляторов микропроцессора могут меняться.</p>
<p>6.&nbsp;&nbsp; Создание БД о ходе и результатах тестирования, тестовых шаблонах и сгенерированных по ним тестах.</p>
<p>7.&nbsp;&nbsp; Более гибкий подход к использованию машинных ресурсов при случайном тестировании. Возможность эффективной работы системы на разных компьютерах.</p>
<p>Все пожелания в той или иной степени были учтены при проектировании и разработке программного комплекса INTEG2.</p>
<p>Управляющая оболочка  комплекса INTEG2</p>
<p>Как и в первоначальной версии системы INTEG, управляющая оболочка INTEG2 (в дальнейшем &ndash; Integ2) представляет собой графический пользовательский интерфейс (GUI), предназначенный для управления работой программ-клиентов, входящих в состав интегрированного программного комплекса для тестирования микропроцессоров INTEG2. Помимо этого (в отличие от первоначальной версии программы Integ), оболочка Integ2 предоставляет возможность сохранять результаты тестирования в специально созданной БД IntegDB и взаимодействовать с ней.</p>
<p><img src="uploaded/image/2010-2/image029.gif" alt="Подпись:  
Рис. 3. Главное окно пользовательского интерфейса оболочки Integ2 (панель Editor)" width="438" height="244" align="left" />Стандартные программы-клиенты по сути такие же, как и в исходной версии системы INTEG. При этом для тестирования в INTEG2, как правило, используются последние версии этих программ, а между программой Logan и соответствующими программами сравнения системы INTEG имеются ощутимые качественные различия.</p>
<p>При этом следует отметить, что существенная разница между оболочками Integ и Integ2 в том, что первая из них могла работать лишь с фиксированными версиями клиентов, в то время как вторая &ndash; не только с их произвольными версиями, но и вообще с произвольными программами, запускаемыми из командной строки. Например, в качестве программы сравнения может выступать не только программа Logan, но и программы сравнения результатов тестирования из исходной версии INTEG [2].</p>
<p>В состав оболочки Integ2 входят исполняемые файлы Integ2.tcl (основной модуль), IntegRun.tcl (опция пакетного выполнения), Integdb.tcl (программный интерфейс для записи информации о тестах в БД), IntegdbGUI.tcl (программа, реализующая графический интерфейс пользователя для работы с БД), а также файлы настроек интерфейса для каждой из программ создания и выполнения тестов *.txt (они же программы-клиенты). Как и в оболочке Integ, для настройки интерфейса могут также использоваться файлы опций (например obolochka2.opt). Файлы опций создаются при сохранении опций соответствующим выбором меню и могут заменять собой файлы настройки интерфейса. После запуска программы Integ2 пользователь может интерактивно выбирать и изменять любые опции. При сложившемся сценарии тестирования для внесения изменений в этот процесс пользователю удобнее иметь дело с файлами опций. В то же время изменения в сценариях тестирования, как правило, влекут за собой необходимость редактирования файлов настройки интерфейса.</p>
<p>Описание графического интерфейса. После запуска основного исполняемого файла оболочки Integ2.tcl появляется главная панель ее графического интерфейса (рис. 3).</p>
<p>При сравнении данного изображения с главным окном оболочки Integ (рис. 1) заметны несколько отличий. Видно, что главное окно Integ2 имеет вид пачки закладок, соответствующих настраиваемым панелям программ-клиентов (имеющим заголовки Editor, Tergen, Vmips, Verilog и Com&shy;pare), при этом одна из закладок является активной. Поскольку процесс тестирования начинается с создания шаблона теста, уместно делать закладку, соответствующую панели редакторов шаблонов, активной по умолчанию (рис. 3). Кроме того, в нижней части окна имеется строка состояния с отображением результата только что выполненного действия (при загрузке по умолчанию выдаются приветствие пользователя и номер используемого *.tcl-интерпретатора).</p>
<p>Итак, основными компонентами описываемого графического интерфейса являются меню, настраиваемые панели отдельных программ-клиен&shy;тов, панель пакетного выполнения, кнопки выполнения программ, установки их параметров и выбора файлов, окна редактирования имен файлов.</p>
<p>Кнопки запуска каждой из программ-клиен&shy;тов, а также основные параметры их запуска вынесены на соответствующие им настраиваемые панели. Вспомогательные параметры каждой из программ устанавливаются при выборе соответствующих кнопок.</p>
<p>В программе предусмотрен пакетный режим работы (панель Batch). При подготовке пакетного запуска предусмотрено перечисление используемых программ и соответствующих файлов данных. Затем пакетное задание можно запустить.</p>
<p>Большинство пунктов меню относится к сохранению значений параметров в файлах опций и к установке значений параметров. В меню в разделе Help содержится справочная информация о программе.</p>
<p>Программы выполняются с помощью кнопок Run, расположенных на всех настраиваемых панелях оболочки. Они служат для запуска программ-клиентов системы (включая конверторы в форматы симуляторов VMIPS и RTL-модели), а также всей системы в пакетном режиме (кнопка Run batch на панели пакетного запуска). При выборе кнопки Run формируется командная строка для выполнения выбранной программы; при формировании командной строки используются активные параметры (они выбираются на соответствующей панели оболочки). После формирования командной строки осуществляется запуск программы.</p>
<p>Как уже отмечалось, каждая составная часть Integ2 имеет свою настроечную панель, состав изображения которой задается в соответствующем файле настроек интерфейса.</p>
<p>Панель может содержать произвольное количество строк с именами и значениями параметров, а также некоторое количество кнопок, открывающих диалоговые окна с описаниями и возможностями установки иных параметров.</p>
<p>В строке каждого параметра могут присутствовать: кнопка check box, показывающая активность данного параметра; надпись с именем параметра; окно редактирования значения параметра; кнопка Browse для запуска диалога выбора имени файла; кнопка Run для запуска программы на выполнение (если параметр является исполняемой программой).</p>
<p>Первые два элемента (кнопка активности и имя параметра) показываются всегда. Окно редактирования значения параметра и кнопка выбора имени файла присутствуют в тех случаях, когда это предусмотрено в соответствующем файле настройки.</p>
<p>Панель Editor (редакторы шаблонов). Как уже упоминалось, эта панель управляет запуском оболочки Integ2 по умолчанию. Здесь представлены два средства создания и редактирования шаблонов тестов: текстовый и графический редакторы. Заметим, что в исходной версии оболочки Integ было реализовано только управление графическим редактором. В то же время в ходе практического использования оболочки оказалось желательным включение в нее и текстового редактора (не только для написания шаблонов). При этом для начинающих разработчиков тестов применение графического редактора оказалось более удобным в обучении и работе. Таким образом, для повышения удобства в использовании графической оболочки оба редактора были включены в данную панель.</p>
<p>Графический редактор шаблонов Guiteg реализует графический пользовательский интерфейс, позволяющий создавать и редактировать шаблоны тестов. Он представляет собой среду, призванную максимально облегчить и упростить подготовку заданий на тестирование (шаблонов). Для этого в Guiteg используются графическое представление шаблона, а также таблицы и панели со строительными элементами шаблонов, оборудованные традиционными элементами управления (окна редактирования, всплывающие меню, различного типа кнопки, скользящие регуляторы и др.). При этом поддерживаются все возможности описания шаблонов, в том числе средства языка описания программы (вызов макросов, циклические конструкции с подстановкой параметра цикла, выборочное задание аргументов инструкций) [2, 3].</p>
<p>Возможности графического редактора и средства для построения шаблонов подробно описаны в работе [3], посвященной исходной версии системы INTEG. По сравнению с ней редактор Guiteg претерпел ряд несущественных изменений. В частности, были добавлены некоторые операторы языка описания шаблона, ранее реализованные в Tergen, и исправлены недочеты, выявленные при практическом использовании редактора.</p>
<p>Как уже отмечалось, шаблоны тестов можно создавать и при помощи встроенного в Integ2 текстового редактора. Для работы с ним в оболочке Integ2 предусмотрена кнопка Run. Она осуществляет запуск текстового редактора и находится в средней части панели (рис. 3).</p>
<p>Панель Tergen (генератор случайных тестов). Генератор случайных тестов Tergen предназначен для преобразования шаблона теста в тестовый код [3]. Версии, используемые в INTEG2, отличаются от системы INTEG несущественно. Тестовый код представляет собой фрагмент оперативной памяти целевого процессора. При запуске Tergen на выходе получаются файл тестового кода с расширением *.hex и протокольная копия шаблона *.tsb, содержащая использованное значение &laquo;зерна&raquo; для датчика случайных чисел (которое является уникальным идентификатором сгенерированного по шаблону теста). В результате по одному шаблону может быть создано любое необходимое количество различных экземпляров тестового кода. Для использования в симуляторах (как VMIPS, так и RTL-модели) выходной тестовый код генератора тестов требует преобразования. В оболочке INTEG2 предусмотрено конвертирование в нужные форматы.</p>
<p>Панель VMIPS (симулятор целевого процессора). Симулятор целевого процессора VMIPS &ndash; это программный эмулятор процессоров архитектуры MIPS64. Симулятор является покомандным на уровне программной модели процессора и реализует порт ввода/вывода и ряд других устройств, имеющих отображаемые в память регистры.</p>
<p>Выполняемая программа состоит из двух частей: загрузчик, который читается из файла boot.bin, и содержательная часть выполняемой программы, которая грузится из файла pro&shy;gram.bin. Файл program.bin &ndash; это выходной результат генератора случайных тестов Tergen, преобразованный во входной формат VMIPS (в рассматриваемой версии симулятора имя файла является фиксированным).</p>
<p>Для управления различными версиями симулятора в графическом интерфейсе оболочки Integ2 предусмотрена соответствующая настраиваемая панель, с которой осуществляются запуск симулятора и работа с его входными и выходными файлами. Также имеются кнопки вызова диалоговых окон работы с различными опциями симулятора (включая параметры вывода и параметры работы с исключениями). Эти опции меняются с изменением используемых версий VMIPS-симулятора, и их изменения отражаются в файле настройки интерфейса VmipsOptions.txt. Одна из этих кнопок осуществляет вызов списка основных (для пользователя) опций симулятора, который пользователь формирует из соображений удобства при сложившейся практике тестирования (путем редактирования файла настройки).</p>
<p>Панель Verilog (симулятор RTL-модели). Программный эмулятор (или, для краткости, симулятор), например NC фирмы Cadence, является сравнительно быстрым и недорогим способом получения предварительного результата при разработке RTL-моделей. Для написания симулятора используется язык Verilog [1].</p>
<p>С точки зрения верификатора рассматриваемый симулятор RTL-модели представляет собой совокупность программных средств, позволяющих смоделировать выполнение определенной тестовой программы на разрабатываемом проекте и представить результат в виде выходных протоколов (log-файлов). Входные данные симулятора &ndash; это файлы с кодом исполняемой программы, файлы, описывающие начальное состояние процессора, и др. Точный набор учитываемых входных данных, их имена и расположение зафиксированы в исходном коде. В нашем случае при симуляции используются rom.asc &ndash; файл образа ПЗУ и ram.asc &ndash; файл образа ОЗУ.</p>
<p>По своей сути эти файлы аналогичны входным файлам boot.bin и program.bin симулятора VMIPS. Подобно файлу program.bin файл ram.asc получается из выходного файла генератора тестов посредством конвертации во входной формат RTL-симулятора (осуществляемой из настроечной панели Tergen).</p>
<p>Панель Verilog оболочки Integ2 предназначена для запуска RTL-симулятора с указанием его входных и выходных файлов, а также опций. Кроме того, предусмотрена возможность работы с конфигурационным файлом RTL-проекта.</p>
<p>Панель Compare (программа сравнения). Суть рассматриваемого метода стохастического тестирования заключается в том, что тестовые программы вырабатываются генератором случайных тестов и выполняются на симуляторах, основанных на двух различных моделях микропроцессора: RTL-симуляторе и эталонной (VMIPS) модели. Результат выполнения какой-либо тестовой программы на модели процессора &ndash; это один или несколько текстовых файлов-отчетов (log-файлов), содержащих информацию об изменениях состояния процессора в ходе выполнения последовательности команд теста. Назовем совокупность этих файлов протоколом выполнения теста. Одним из ключевых шагов в процедуре тестирования является сравнение двух протоколов, полученных от запуска определенного теста на двух вышеназванных моделях. Цель такого сравнения &ndash; выявление отличий и диагностика ошибок в моделях микропроцессора.</p>
<p>Большой объем тестов, используемых при стохастическом тестировании, требует автоматизации проверки результатов, то есть сравнения протоколов выполнения тестов. Эту задачу выполняют различные программы сравнения и анализа результатов тестирования. В рассматриваемой версии системы данную роль выполняет программа Logan, представляющая собой инструментальное средство для верификации микропроцессоров с архитектурой MIPS64. Она была разработана по результатам практического использования системы INTEG. От других подобных программ, используемых в первоначальной версии системы INTEG, ее отличает следующее.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Целостное сравнение результатов. Подход Logan, заключающийся в сравнении протоколов, а не отдельных пар файлов, не требует процедуры разбиения протоколов на составляющие и выполняется за один проход.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Программа Logan исследует бинарные значения атрибутов отчетов вместо лексикографического сравнения строк, применяемого в более ранних программах. Это дает возможность анализировать данные по содержанию, а не по форме.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; В Logan предусмотрены средства настройки формата файлов данных. Большинство изменений формата, включая добавление новых файлов данных, требует лишь применения этих средств, а не переписывания программы.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; По результатам сравнения Logan выдает подробный отчет, включающий значения данных для инструкции, в которой обнаружена ошибка.</p>
<p>Программа Logan представляет собой одну из стандартных программ-клиентов оболочки Integ2. Соответственно, для управления программой из оболочки предусмотрена панель Compare (рис. 4).</p>
<p>Она содержит формирование команды на запуск (строка Compare), пути к выходным log-файлам обоих симуляторов и кнопку Options, вызывающую диалоговое окно опций программы Logan, доступных пользователю для работы в интерактивном режиме.</p>
<p>Панель Batch (пакетное выполнение). Управляющая оболочка Integ2 предоставляет возможности пользователям по оформлению и запуску пакета заданий. Эта опция была предусмотрена и в первоначальной версии оболочки Integ [3]. В соответствии с пожеланиями пользователей оболочки в ее нынешнюю версию добавлен ряд новых возможностей, а именно: результаты для каждого теста сохраняются в отдельной директории; нет ограничения на количество шаблонов в пакете; усовершенствовалась опция повторного запуска теста, в том числе с прежними параметрами; появилась опция согласования некоторых параметров VMIPS и RTL-симуляторов; стал возможным запуск пакета заданий из командной строки. Кроме того, существенным достоинством системы INTEG2 стала возможность сохранения результатов тестирования в специально созданной БД. Соответственно реализованы и функции взаимодействия с БД из управляющей оболочки.</p>
<p>В оболочке Integ2 для подготовки пакетов заданий и управления их запуском предусмотрена панель Batch. В данной панели указывается, какие программы-клиенты оболочки использовать для пакетного выполнения и с какими файлами, после чего осуществляется запуск выполнения пакета заданий. Имеется опция записи информации о ходе пакетной обработки в специальный файл, а также возможность работы с обрабатываемыми файлами непосредственно из данной панели. Функции взаимодействия с БД включают в себя подключение к ней и активизацию ее графического пользовательского интерфейса.</p>
<p>Пакетный запуск из командной строки может осуществляться следующими двумя способами:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Integ2.tcl filelist.txt</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Integ2.tcl filelist.txt options.opt,</p>
<p>где filelist.txt &ndash; произвольное имя файла, содержащего список шаблонов и/или тестов, предназначенных для обработки; options.opt &ndash; имя файла опций оболочки. Если этот файл не указан, все параметры программы берутся из файлов настройки интерфейса Integ2.</p>
<p>Файлы настройки интерфейса</p>
<p><img src="uploaded/image/2010-2/image031.gif" alt="Подпись:  
Рис. 4. Оболочкa Integ2, панель Сompare 
(программа Logan)" width="754" height="259" align="left" />Как уже отмечалось, основное пожелание к модернизированным версиям управляющей оболочки Integ &ndash; возможность гибкой реакции оболочки на изменения в опциях и сценариях случайного тестирования, равно как и на новые программы, используемые в данном процессе. Здесь, в частности, подразумевается, что данные изменения не должны повлечь за собой внесение изменений в код программы оболочки или ее переписывание.</p>
<p>В соответствии с данным пожеланием в оболочке Integ2 предусмотрены файлы настройки интерфейса для каждой из программ-клиентов оболочки, а также для пакетного запуска. В каждом из настроечных файлов задаются описание соответствующей программы, описание ее опций и их значения по умолчанию, правила формирования командной строки запуска программы и правила отображения на экране параметров программы и возможностей их настройки. Как правило, файлы настроек меняются при использовании новых версий программ-клиентов (или при замене одних программ другими), при появлении новых опций у программ-клиентов, а также при изменениях в порядке их использования. Таким образом, в данных ситуациях вместо переписывания исходного кода оболочки следует лишь отредактировать соответствующие настроечные файлы.</p>
<p>Имена файлов настройки интерфейса в программе Integ2 фиксированные:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; guitegOptions.txt &ndash; для редактора шаблонов Guiteg и текстового редактора;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; tergenOptions.txt &ndash; для программы генерации тестов Tergen;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; vmipsOptions.txt &ndash; для симулятора VMIPS;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; verilogOptions.txt &ndash; для программы Verilog;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; compareOptions.txt &ndash; для программы сравнения.</p>
<p>Уже упоминалось, что, помимо настроечных файлов, при работе программы Integ2 значения многих параметров (но не количество параметров, не имена параметров и т.п.) могут быть изменены в интерактивном режиме и сохранены в файлах опций. Эти файлы в дальнейшем можно использовать при работе программы Integ2 вместо файлов настройки интерфейса. Файлы опций имеют расширение *.opt и не предназначены для текстового редактирования в отличие от файлов настройки. Формирование и редактирование файлов настройки требуют от пользователя определенной квалификации и знания формата настроечных файлов. Однако это существенно более простая задача, чем переписывание исходного кода программы.</p>
<p>Приведем пример результатов редактирования настроечных файлов. В настоящее время при случайном тестировании наряду с Logan используются и другие программы сравнения, в частности, использующие набор программ, написанных на языке Perl (например, они часто используются при повторных запусках старых тестов). Такие программы сравнения (с ними предусмотрена работа в оболочке Integ2) будут являться программами-клиентами оболочки вместо Logan. Для этого следует провести редактирование файла compareOpti&shy;ons.txt, соответствующего программе Logan, в результате после запуска Integ2 панель Compare примет вид, изображенный на рисунке 5.</p>
<p>Два настроечных файла приводят к двум различным панелям оболочки Integ2, решающим одну и ту же задачу (сравнения протоколов выдачи VMIPS и Verilog-симуляторов) различными способами. У пользователя есть большие возможности в выборе оптимального для себя режима настройки оболочки Integ2.</p>
<p>Подсистема БД IntegDb</p>
<p>Подсистема БД IntegDb является составной частью комплекса INTEG2 и позволяет объединять информацию о работе нескольких независимо работающих программ Integ2 в общую БД. Таким образом, формируется клиент-серверное приложение для тестирования моделей процессоров. Клиентами являются программы Integ2, запущенные на разных компьютерах, но работающие с единым сервером БД. В таком приложении ресурсоемкое тестирование осуществляется на клиентской стороне, а информация о результатах тестирования накапливается на серверной. Помимо этого, в рамках подсистемы реализован пользовательский интерфейс, позволяющий непосредственно работать с БД.</p>
<p>Основные функции подсистемы следующие:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; хранение шаблонов тестов на сервере;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; регистрация запусков тестов;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; отображение серий запусков тестов;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; описание ошибок при тестировании;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; привязывание тестов, выявивших ошибку, к конкретной ошибке;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; хранение тестов, указанных пользователями, на сервере.</p>
<p>Подсистема IntegDb делится на серверную и клиентскую части. Клиентские модули:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; пакет IntegDb.tcl &ndash; программный интерфейс для записи информации о тестах в БД;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; пакет IntegDbGui.tcl &ndash; программа, реализующая графический интерфейс пользователя для работы с БД.</p>
<p><img src="uploaded/image/2010-2/image033.gif" alt="Подпись:  
Рис. 5. Оболочкa Integ2, панель Сompare 
(модуль сравнения, написанный на Perl)" width="754" height="270" align="left" />Серверная часть подсистемы:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; БД IntegDb, работающая под управлением сервера MySQL;</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; централизованное хранилище файлов, доступное на запись и чтение для всех программ, работающих в рамках приложения.</p>
<p>Файлы клиентской части подсистемы являются общими с оболочкой Integ2. Для полноценного функционирования подсистемы необходимо следующее программное окружение.</p>
<p>На стороне клиента:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; интерпретатор TCL 8.4 или выше с установленными пакетами mysqltcl версии 3.01 или выше [4] и tcllib версии 1.11 или выше;</p>
<p>1)&nbsp; программа &laquo;Оболочка Integ2&raquo;, начиная с версии 2.2.</p>
<p>На стороне сервера &ndash; сервер управления БД MySQL версии 4 или выше.</p>
<p>Требования к системным ресурсам для программ оболочки Integ2 и IntegDb одинаковые.</p>
<p>Реляционная БД IntegDb имеет в своем составе следующие таблицы:</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Template (информация о шаблонах тестов);</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Series (информация о сериях тестов, запускаемых на клиентах);</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Test (информация о тестах, сгенерированных по шаблонам);</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Series_Test (информация о запусках тестов);</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Error (информация о найденных ошибках);</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Dbparam (служебная информация).</p>
<p>Архитектура клиент-серверного приложения. Для работы клиент-серверного приложения требуется установка оболочки Integ2 на всех клиентах и серверной части подсистемы IntegDb на сервере БД. Общая схема работы приложения представлена на рисунке 6.</p>
<p>При каждом запуске процесса тестирования с помощью управляющей оболочки Integ2 модуль IntegDb.tcl записывает информацию об этом запуске в БД. При необходимости шаблон, на основе которого был сгенерирован тест, копируется в хранилище файлов под уникальным именем. Разделение на серверной стороне БД и хранилища файлов, а также система именования сохраняемых на сервере файлов обеспечивают возможность независимого доступа к сохраненным шаблонам, если БД по каким-либо причинам будет недоступна (что встречается на практике). Выбранная архитектура позволяет развернуть БД и хранилище файлов на разных компьютерах, что дает возможность гибче использовать имеющиеся машинные ресурсы для тестирования.</p>
<p>Графический пользовательский интерфейс IntegDb. Пользовательский интерфейс для работы с БД реализован в программе Integ Database GUI, содержащейся в файле IntegDb&shy;Gui.tcl. Она осуществляет графический интерфейс доступа к информации об объектах, хранящихся в БД, и помогает проводить итоговый анализ результатов тестирования.</p>
<p>В главном окне программы отображаются выполненные тесты, сгруппированные либо по серии, в рамках которой тест запускался, либо по выявленной тестом ошибке. Программа предоставляет возможность просмотреть детальную информацию о тесте, дать задание системе на сохранение всех файлов, необходимых для полностью идентичного запуска теста, или разрешить удаление файлов теста с клиентского компьютера. Для удобства пользователей эти операции реализованы как для одного теста, так и для группы.</p>
<p>В случае выявления тестом ошибки программа предоставляет пользователю отчет о результатах теста. Проанализировав его, пользователь может указать, какую именно ошибку выявил тест. В зависимости от ситуации может быть указана одна из ранее выявленных и сохраненных в БД ошибок или описана новая. Программа также позволяет регистрировать найденную ошибку в системе отслеживания ошибок Bugzilla.</p>
<p>Аналогично оболочке Integ2 программа Integ Database GUI имеет настроечный файл idbgui&shy;Options.txt. Его формат несколько отличается от формата настроечных файлов Integ2, однако смысл работы с файлами в обоих случаях одинаков: обеспечение оптимального (для конкретного пользователя) режима работы программ путем редактирования их настроечных файлов.</p>
<p><img src="uploaded/image/2010-2/image035.gif" alt="Подпись:  
Рис. 6. Схема работы клиент-серверного приложения
 на основе IntegDb" width="754" height="312" align="left" />На основании изложенного можно сделать следующие выводы. В программном комплексе INTEG2 сохранены все этапы метода случайного тестирования, реализованные в предшествующей ему системе INTEG [2]. Шаблоны тестов создаются в соответствии с потребностями тестирования при помощи удобного графического интерфейса (или текстового редактора). Для практического тестирования используется управляющая графическая оболочка, которая берет на себя рутинные действия и обеспечение сопряжения компонентов системы. Запуск тестов на эталонной модели устройства (симуляторе VMIPS) и симуляторе аппаратуры (RTL-модели) позволяет получить протоколы выполнения, а их анализ и сравнение &ndash; обнаружить ошибки и несоответствия в проекте.</p>
<p>Основными общими для INTEG и INTEG2 возможностями являются:</p>
<p>-&nbsp;&nbsp;&nbsp; автоматическое массовое создание случайных тестов;</p>
<p>-&nbsp;&nbsp;&nbsp; обеспечение корректности тестового кода и воспроизводимости результатов;</p>
<p>-&nbsp;&nbsp;&nbsp; использование сведений о состоянии целевого процессора;</p>
<p>-&nbsp;&nbsp;&nbsp; регулирование вероятностей выбора особых ситуаций;</p>
<p>-&nbsp;&nbsp;&nbsp; развитые возможности настройки шаблонов, позволяющие осуществить последовательное тестирование от простого к сложному;</p>
<p>-&nbsp;&nbsp;&nbsp; графический интерфейс, облегчающий создание шаблонов и процедуру тестирования.</p>
<p>В то же время комплекс INTEG2 имеет ряд преимуществ по сравнению с системой INTEG.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; В управляющей оболочке Integ2 реализована возможность быстрой реакции на изменения в опциях, сценариях и программах, используемых для случайного тестирования. Достигается это редактированием настроечных файлов оболочки.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Внесены значительные изменения в реализацию опции пакетной обработки заданий управляющей оболочкой Integ2. В частности, появилась возможность пакетного запуска из командной строки с использованием различных опций тестирования. При этом результаты запуска регистрируются в БД IntegDb.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Программа сравнения Logan дает возможность оценивать и сравнивать результаты работы симуляторов модели микропроцессора с учетом возможности изменений форматов их выходных файлов.</p>
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp; Для регистрации процесса запуска тестов, хранения шаблонов и результатов тестирования, описания выявленных ошибок специально создана подсистема БД IntegDb. При ее проектировании реализован принцип рационального использования машинных ресурсов. В графическом интерфейсе IntegDb реализованы функции, позволяющие работать с ранее проведенными тестами и упрощающие анализ и классификацию ошибок, выявляемых при новых запусках тестов.</p>
<p>В перспективе планируется включить в INTEG2 средства, осуществляющие статистический анализ выполненных тестов, что должно помочь в решении вопроса о полноте покрытия тестируемого проекта микропроцессора. Для рационального использования машинных ресурсов планируется совершенствование опции разделенного тестирования на разных компьютерах.</p>
<p>Литература</p>
<p>1.&nbsp;Bergeron J. Writing Testbenches using SystemVerilog. Springer, 2006.</p>
<p>2.&nbsp;Стохастическое тестирование в системе INTEG / И.В. Грибков [и др.] // Программные продукты и системы. 2007.  № 2. С. 22&ndash;26.</p>
<p>3.&nbsp;Система тестирования микропроцессоров INTEG / И.В. Грибков [и др.]. М.: НИИСИ РАН, 2007.</p>
<p>4.&nbsp;URL: http://www.xdobry.de/mysqltcl/mysqltcl.html (дата обращения: 01.03.2010).</p></div><br /></td></tr></table><table border="0" width="100%" style="width:100%;">
                   <tr>
                      <td><b>Постоянный адрес статьи: http://swsys.ru/index.php?page=article&id=2503</b></td>
                      <td align="right"><a target="_blank" href="/print/article_print.php?id=2503">Версия для печати</a></td>
                   </tr>
                   <tr>
                      <td><b>Статья опубликована в выпуске журнала № 2 за 2010 год.</b></td>                      
                                  </tr>            <tr><td><a href="http://swsys.ru/pay/form.php?journal=90">Электронная подписка на данный выпуск в формате PDF</a>            </tr></td>              
          </table><br /><a href="javascript:history.back();">Назад, к списку статей</a><br /><br />Хотите оценить статью или опубликовать комментарий к ней - <a href="http://swsys.ru/index.php?page=registry">зарегистрируйтесь</a><br /><br />




				
				<div id="ie_clearing">&nbsp;</div>
				<!-- End: IE Column Clearing -->
				
			</div>
			<!-- end: #col3 -->
            
         
            
		</div>
        
		<!-- end: #main -->
		<!-- begin: #footer -->


         </div>


		<div id="footer">

			<div class="black">Журнал зарегистрирован в комитете РФ по печати</div><div style="margin:0px; padding:0px; line-height:16px">
			Свидетельство о регистрации средства массовой информации № 013831 от 26.11.99 г.<br />
			Решение Президиума Высшей аттестационной комиссии Министерства образования и науки РФ от 19.02.2010 г. (о внесении в Перечень ведущих рецензируемых научных журналов и изданий, в которых должны быть опубликованы основные научные результаты диссертаций на соискание ученых степеней кандидата и доктора наук).<br />
&copy; Все права на авторские материалы охраняются в соответствии с законодательством РФ. Перепечатка возможна только с разрешения редакции. При цитировании материалов обязательна ссылка на Международный журнал "Программные продукты и системы" (для on-line проектов обязательна гиперссылка).</div>
			

			<div style="margin-top:15px;float:left">
<!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='http://www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t26.1;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+
"' alt='' title='LiveInternet: показано число посетителей за"+
" сегодня' "+
"border=0 width=88 height=15><\/a>")//--></script><!--/LiveInternet-->
			</div>

			<div align="right" style="margin:15px">
               <a target="_blank" href="http://www.cps.tver.ru">Сайт разработан в <span>НИИ &laquo;ЦЕНТРПРОГРАММСИСТЕМ&raquo;</span></a><br />
               <a href="http://swsys.ru/index.php?page=17">Информация о сайте</a>
            </div>

		</div>		
		<!-- end: #footer -->



	</div>

</div>



<style>

.reklama {
    color: #666;
   font-size:11px;
   font-family:Arial;
  padding-bottom:20px;
}
.reklama a {
    color: #666;
   text-decoration:underline;
}
.reklama a:hover {
    color: #000;
   text-decoration:none;
}
 

@media print {
  .reklama {
      display:none;
  }
}

</style>




</div>


 






<script type="text/javascript">
/*
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
*/
</script>
<script type="text/javascript">
/*
try {
var pageTracker = _gat._getTracker("UA-9821437-1");
pageTracker._trackPageview();
} catch(err) {}
*/
</script>

</body>
</html>
