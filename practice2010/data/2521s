<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" lang="ru">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>

<meta name="sprypayUrlChecker" content="sprypay_fpraOIA7CnzFuVkwTFol4GEMpK3RdzExgx4SCKayofR7wwGQvRBfNE2QUww9JV84_1763">

<title>Обобщенная операция абстрагирования как реализация принципа открытости самоорганизующейся информационной системы</title>     <style>
	 .sps {
        padding-left: 20px;
        line-height: 20px;
	   padding:1px;
	   margin:0px;
     }

     .hed {
       color: #666666;
       font: bold;
       font-size: 14px;
       border: 1px solid;
	   padding:1px;
	   margin:0px;
     }

     .trhed {
       padding: 25px;
     }
	 
	 .td_arch {
	   margin:0px;
	   padding:5px;
	  }
	 
	 .in_journal {
	  border:3px solid #fff;
	 }

	 .in_journal:hover {
	  border:3px solid #aaaaaa;
	 }
	 
     .ndisp {
         display:none;
     }
     
	  </style>

<!--[if IE]>
<style>
.outer, .wrapper, .minwidth {
	zoom: 1;
}

</style>
<![endif]-->

<!--[if lt IE 7]>
<style>
.minwidth {
	border-left: 504px solid #fff;
}
.wrapper {
	margin-left: -504px;
	position: relative;
}
</style>
<![endif]-->

<link href="css/layout_2col_right_31.css" rel="stylesheet" type="text/css"/>	  

<link href="style.css" type="text/css" rel="stylesheet" />
<link rel="alternate" type="application/rss+xml" title="RSS" href="http://www.swsys.ru/rss">

<!--[if lte IE 7]>
<link href="css/patches/patch_2col_right_31.css" rel="stylesheet" type="text/css" />
<![endif]-->

    <script src="script/CalendarPopup.js"></script>


<script>

function submit_login() {
 if ( document.login_form.login.value != "" && document.login_form.password.value != "" ) { 
  document.login_form.activity.value = "AUTORIZ";
  document.login_form.submit();
  }
 else 
 {
 alert("Введите логин и пароль"); 
 document.login_form.username.focus();
 }
 
}

 function to_registry() {
	document.login_form.action = "event.php?page=registry";
    document.login_form.submit();
 }

 function to_search() {
    document.search_form.submit();
 }

</script>

</head>
<body>








<div id="page_margins">
	<div id="page">
		<div id="header">
			<div id="topnav">
				  <form action="event.php?page=search&order=date"  method="post" id="search-theme-form" name="search_form">
<div><div id="search" class="container-inline"><div class="form-item">
 <input type="text" maxlength="128" name="search" id="edit-search-theme-form-keys"  size="15" value="поиск..." title="Введите слова для поиска." class="form-text" onBlur="if ( this.value == '' ) this.value = 'поиск...';" onFocus="if ( this.value=='поиск...' ) this.value='';"/>
 <a href="#" onclick="Javascript: if ( document.search_form.search.value == 'поиск...' ) { alert('Введите поисковый запрос!') } else document.search_form.submit()">Найти</a>
</div>
</div>
</div></form>
				<div id="subsearch"><span><a href="index.php?page=extsearch">Расширенный поиск</a> / <a href="index.php?page=sitemap">Карта сайта</a></span></div> </div>
			<span style="cursor:pointer" onclick="Javascript:document.location = 'index.php'" class="zag">Международный журнал</span>
			<h1 style="cursor:pointer; width:auto" onclick="Javascript:document.location = 'index.php'">Программные продукты и системы</h1>
		   
			</div>
		<!-- begin: main navigation #nav -->
		<div id="nav"> <a id="navigation" name="navigation"></a>
			<!-- skiplink anchor: navigation -->			
		</div>
		<!-- end: main navigation -->
		<!-- begin: main content area #main -->
		<div id="main">
			<!-- begin: #col1 - first float column -->
			<div id="col1">
				<div id="col1_content" class="clearfix">
					<div id="menu" class="r-block">
						<h2>Разделы сайта</h2>
						<ul id="submenu">
						
						<li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=1">О журнале</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=3">Редколлегия</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=12">Научные направления</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=9">Свежий выпуск</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=19">Список авторов выпуска</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=10">Архив выпусков</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=11">Подписка</a></li><li style="white-space:nowrap;margin-left:-15px"><a href="index.php?page=5">Авторам и издателям</a></li>						
					  </ul>	
					</div>	

     
					<div id="login" class="mainborder r-block">
                    
                    <h2>Вход</h2>				
				   <form action="event.php?page=article"  method="post" id="login-form" name="login_form">
<div id="login-form-div">
	<div class="form-item"><input type="text" maxlength="128" name="login" size="15" value="" title="" class="form-text" /></div>
 <div class="form-item"><input type="password" maxlength="128" name="password" size="15" value="" title="" class="form-text"/></div>
 <input type="hidden" name="activity" />
 
        <label for="save_pas"><input type="checkbox" style="width:25px;border:none;" name="save_pas" id="save_pas" />Запомнить</label><br />

  <div id="login-button"><input style="border:none;width:46px;height:45px" type="image" src="images/login-button1.gif" onclick="submit_login();"></div> 
<!-- <input type="submit" /> -->
</div></form>
				 
				<span><a href="index.php?page=recovery">Забыли пароль?</a> / <a href="#" onclick="to_registry();">Регистрация</a></span>				  
                         
                 

                 
                 
				  </div>


                  
                  

           
  
  <div style="padding: 5px 0px 0px 45px">     
<script type="text/javascript"><!--
google_ad_client = "pub-6573451237838679";
/* Вторая страница право */
google_ad_slot = "0208394776";
google_ad_width = 120;
google_ad_height = 240;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>                  
     </div>
     
      
				  
				  
				                    <div id="next-after" class="r-block">
                    <h2>Добавить в закладки</h2>
                    <script src="/ok2.js" type="text/javascript"></script>
                  </div>
                  
				  <div id="next-after" class="r-block">
					<h2>Следующий номер</h2>
					<div id="sled-nomer" class="floatbox"><span class="simv-nomer">№</span>1</div>
					<div id="sled-nomer-text">
					Выходит:<br/>
					<div> 18 Марта 2011 </div>
                     				  </div>
				 </div>
				  <div class="r-block" id="arh">
					<h2>Выпуски</h2>

 						<div class="god">2010</div><ul><li><a href="index.php?page=search&order=date&journal=92">№4 Декабрь 2010</a></li><li><a href="index.php?page=search&order=date&journal=91">№3 Сентябрь 2010</a></li><li><a href="index.php?page=search&order=date&journal=90">№2 Май 2010</a></li><li><a href="index.php?page=search&order=date&journal=89">№1 Март 2010</a></li></ul>
				
						<div align="center" style="margin-top:0px; padding:0px" ><a style="font-size:12px" href="index.php?page=10">все выпуски</a></div>
						<div align="center" style="margin-top:0px; padding:0px" ><a style="font-size:12px" href="index.php?page=all_article">все статьи</a></div>
				  </div>
				  
				  
				</div>

                  <div id="next-after" class="r-block">
                    <h2>Новости</h2>  
                                 
                        <p>     
                        <a href="index.php?page=show_news&id=117">В Международном университете природы, общества и человека (г. Дубна) предложен алгоритм генерации растущих сетей с нелинейным предпочтительным присоединением, конкуренцией и удалением узлов</a> [15.12.2010]
                        <br/>
                                     
                        <p>     
                        <a href="index.php?page=show_news&id=116">В Группе компаний «Генезис знаний» (г. Самара) предложено решение по построению и внедрению мультиагентной системы распределения производственных ресурсов МАС «Оптимизатор»</a> [08.12.2010]
                        <br/>
                                     
                        <p>     
                        <a href="index.php?page=show_news&id=115">В Волгоградском государственном техническом университете разработана модель обучающей системы в области автомобильного транспорта</a> [01.12.2010]
                        <br/>
                                                
                        <div style="text-align:center"><a href="index.php?page=show_news">читать все новости</a></div>
                        
                                          </div>

					<div class="r-block" style="text-align:center;padding:0px;margin:0px;">
					   <a style="text-decoration:none;" href="rss/"><img alt="RSS" title="RSS" src="images/rss.gif"/><br/>
						<div style="text-decoration:underline;display:inline">Подписаться на RSS</div></a>
					</div>
                    
                  

			</div>

       

			<!-- end: #col1 -->
			<!-- begin: #col3 static column -->
			<div id="col3">
				<div id="col3_content" class="clearfix"> <a id="content" name="content"></a>





<script>

            function go_event_comment(act, id)
            {
                 document.s_article.activity.value = act;
                 document.s_article.id.value = id;
                document.s_article.submit();
            }


            function go_event_vote(act, id)
            {
                 document.v_article.activity.value = act;
                 document.v_article.id.value = id;
                document.v_article.submit();
            }
            
            
</script>

<h2 style="margin-bottom:3px">Обобщенная операция абстрагирования как реализация принципа открытости самоорганизующейся информационной системы</h2><div style="margin-bottom:10px"><strong>The generalized operation of abstracting as a realization  of principle of openness of self-organizing information system</strong></div>Статья опубликована в выпуске журнала № 2 за 2010 год. [ 27.05.2010 ]<br/><strong>Аннотация:</strong><em style="font-size:8pt">Рассмотрен принцип открытости самоорганизующейся информационной системы на уровне концептуального моделирования предметной области. Предложена реализация открытости на основе обобщенной операции абстраги-рования, позволяющей формировать образы объектов, обладающие большой выразительной способностью. На при-мерах показано формирование образов с отбрасыванием несущественных свойств, интегральными и усредненными свойствами и др. </em><br /><strong>Abstract:</strong><em style="font-size:8pt">The principle of openness of self-organizing system on the level of conceptual model of data domain is taken up. The implementation of openness on the basis of generalized operation of abstracting, permitting the formation of objects’ images which have a large impressive capability, is suggested. The examples show the images’ formation with cutting the insignificant features, integral and average properties.</em><table border="0" width="100%" style="width:100%;"> 
            <tr>
             <td colspan="2"><b>Авторы: </b><a href="index.php?page=infou&id=4041">Дрождин В.В. (drozhdin@yandex.ru)</a> - Пензенский государственный педагогический университет им. В.Г. Белинского Кандидат технический наук Ph.D., <a href="index.php?page=infou&id=5731">Зинченко Р.Е. (rzinchenko@yandex.ru)</a> - Пензенский государственный педагогический университет им. В.Г. Белинского   , <a href="index.php?page=infou&id=5855">Герасимова Е.В. (drozhdin@yandex.ru)</a> - Пензенский государственный педагогический университет им. В.Г. Белинского   </td>            
         </tr> 
            <tr>
             <td><b>Ключевые слова: </b><a href="index.php?page=infotg&id=1170">самоорганизующаяся информационная система</a>, <a href="index.php?page=infotg&id=1566">отношение абстрагирования</a>, <a href="index.php?page=infotg&id=1171">моделирование предметной области</a>, <a href="index.php?page=infotg&id=1172">концептуальная модель предметной области</a>, <a href="index.php?page=infotg&id=269">информационная система</a><br /></td> 
           </tr>
            <tr>
             <td><b>Keywords: </b><a href="index.php?page=infotg&id=1170">self-organizing system</a>, <a href="index.php?page=infotg&id=1566">abstracting relation</a>, <a href="index.php?page=infotg&id=1171">modeling of data domain</a>, <a href="index.php?page=infotg&id=1172">conceptual model of data domain</a>, <a href="index.php?page=infotg&id=269">information system</a><br /></td> 
           </tr>   

 <tr>
             <td>Средний балл статьи: - <br />Всего комментариев: 0<br />Количество просмотров: 379<br />   
             </td> 
            <td align="right"><a target="_blank" href="/print/article_print.php?id=2521">Версия для печати</a></td>
         </tr>           
          </table>

<br/>

    
    
    <script>
      function set_size(vl) {
         document.getElementById('id_art').style.fontSize = vl;
      }
      function set_font(vl) {
         document.getElementById('id_art').style.fontFamily = "'" + vl + "'";
      }
    </script>
    
      <div style="width:100%;background:#E0E0E0;padding:5px;border:1px solid #D0D0D0">
         <form>
           Размер шрифта:
            <select name="f_size" onchange="set_size(this.value)">
               <option value="10px">10 px</option>
               <option value="12px" selected="selected">12 px</option>
               <option value="14px">14 px</option>
               <option value="16px">16 px</option>
               <option value="18px">18 px</option>
               <option value="24px">24 px</option>
            </select> &nbsp; &nbsp; &nbsp;
           Шрифт:
            <select name="f_name" onchange="set_font(this.value)">
               <option value="Arial">Arial</option>
               <option value="Trebuchet MS" selected="selected">Trebuchet MS</option>
               <option value="Times New Roman">Times New Roman</option>
               <option value="Verdana">Verdana</option>
               <option value="Arial Narrow">Arial Narrow</option>
               <option value="Tahoma">Tahoma</option>
            </select>
            
         </form>
        </div>
         <br />
    <table bgcolor="#FFFFFF"><tr><td><div id="id_art" style="font-size:12px;"><p>Компьютеры, обладая огромными ресурсами, стремительно проникают в различные сферы деятельности человека. Это требует формализации специфических предметных областей (ПрО) и разработки методов решения все более сложных задач. Однако невозможно быстро и сразу создавать хорошие информационные системы для отражения сложных ПрО, поэтому они проектируются и создаются поэтапно, что часто требует доработки уже используемых подсистем. Более того, в [1] отмечено, что всякую ПрО можно в любой момент уточнить новыми подробностями, отличительными признаками, вариантами и прочими дополнениями, и в этом смысле она бесконечна. Следовательно, все попытки окончательно формализовать какую бы то ни было ПрО обречены на провал. С другой стороны, в процессе эксплуатации автоматизированной информационной системы (АИС) постепенно уменьшается ее адекватность внешней среде вследствие изменения среды (состава и качества пользователей) и решаемых задач, однако при этом модель ПрО в информационной системе остается фиксированной. Это снижает качество удовлетворения информационных потребностей пользователей и требует модификации системы. Следовательно, необходимы новые принципы построения и подходы к созданию дружественных (ориентированных на конечных пользователей) АИС. На взгляд авторов, наиболее продуктивный подход к организации систем нового типа определила синергетика, исследующая самоорганизующиеся системы, основными характеристиками которых являются эволюционные изменения, открытость, нелинейность функционирования и наличие хаоса (флуктуаций), являющегося фундаментальным регулятором устойчивости и развития систем. В области программного обеспечения эти принципы выражены в [1]: в качестве новых аспектов взаимодействия выступают время и открытость. В силу своей открытости система может получать от окружения неалгоритмические стимулирующие воздействия, и, соответственно, ее поведение также принимает неалгоритмический характер.</p>
<p>&nbsp;</p>
<p>Самоорганизующаяся информационная система (СИС) является открытой на всех уровнях своей организации: открытость структур, открытость взаимодействия с внешней средой и т.д. Для поддержки адекватности внешней среде СИС должна адаптироваться к ее изменениям путем все более полного учета семантики ПрО. Разработчики АИС не в состоянии предвидеть и реализовать в системе все особенности той или иной ПрО, поэтому СИС должна предоставить пользователям высокоуровневый инструментарий, позволяющий легко совершенствовать и расширять поддерживаемую в системе модель ПрО. В настоящей работе предлагается реализовать данный механизм на основе обобщенной операции абстрагирования.</p>
<p>Абстрагирование устанавливает отношение между понятием-образом и конкретным поняти- ем [2]. Оно позволяет формировать объекты понятия-образа путем огрубления объектов конкретного понятия. Учитывая, что отношения агрегации, классификации и обобщения [3] также являются определенными видами абстрагирования, будем считать, что в рассматриваемом случае отношение абстрагирования реализуется способами формирования образов, отличными от способов реализации указанных отношений. Например, формирование понятия-образа может осуществляться:</p>
<p>&ndash;&nbsp;отбрасыванием несущественных свойств конкретного понятия;</p>
<p>&ndash;&nbsp;отбрасыванием свойств конкретного понятия, существенных для конкретных объектов, но не существенных в определенной ситуации, соответствующей понятию-образу;</p>
<p>&ndash;&nbsp;созданием обобщенного понятия с интегральными характеристиками, формируемыми на основе свойств конкретного понятия;</p>
<p>&ndash;&nbsp;созданием обобщенного понятия-образа, объекты которого будут иметь усредненные характеристики групп объектов конкретного понятия и др.</p>
<p><img src="uploaded/image/2010-2/image464.gif" alt="Подпись:  
Рис. 1" width="607" height="250" align="left" />Таким образом, отношение абстрагирования устанавливается между понятием-образом и конкретным понятием путем задания пользователем правила формирования объектов понятия-образа на основе объектов и свойств конкретного понятия.</p>
<p>Для демонстрации возможностей операции абстрагирования приведем примеры модификации концептуальной модели ПрО понятиями, создаваемыми с помощью этой операции. Для формализации отображения концептуальной модели ПрО в схему БД будем использовать язык описания модели ПрО и механизм соответствия, рассмотренные в [3, 4].</p>
<p><img src="uploaded/image/2010-2/image465.gif" alt="" width="33" height="12" />В качестве наглядной иллюстрации возьмем фрагмент ПрО &laquo;Учебный процесс вуза&raquo;, основу которого составляет система понятий, представленная на рисунке 1, где стрелками обозначено отношение агрегации.</p>
<p>На рисунке 2 приведена схема БД для модели ПрО.</p>
<p>Для каждого понятия модели ПрО создается базовый SQL-запрос, позволяющий получить из БД множество объектов, соответствующих понятию, вида</p>
<p>CREATE OR REPLACE VIEW v_V AS</p>
<p><img src="uploaded/image/2010-2/image467.gif" alt="Подпись:  
Рис. 2" width="607" height="441" align="left" />Select *</p>
<p>From V</p>
<p>где V &ndash; имя понятия модели ПрО в терминах схемы БД; v_V &ndash; наименование базового SQL-запроса для понятия V.</p>
<p>Например, базовый SQL-запрос для понятия &laquo;Факультет&raquo; (FACULTY) имеет вид</p>
<p>CREATE OR REPLACE VIEW v_FACULTY AS</p>
<p>Select *</p>
<p>From FACULTY</p>
<p>Для всех остальных понятий модели ПрО базовые SQL-запросы создаются аналогично.</p>
<p>Рассмотрим модификацию модели ПрО путем добавления новых понятий с организацией связи на основе отношения абстрагирования.</p>
<p>При этом возможны следующие варианты:</p>
<p>1)&nbsp; добавление нового понятия-образа, связываемого с существующим конкретным понятием модели ПрО;</p>
<p>2)&nbsp; добавление нового конкретного понятия, связываемого с существующим понятием-образом модели ПрО.</p>
<p>Например, в концептуальной модели ПрО (рис.&nbsp;1) понятие &laquo;человек&raquo; содержит большое количество свойств, которые являются несущественными или отсутствуют (например, звание и ученая степень у студентов) у объектов понятий &laquo;студент&raquo; и &laquo;преподаватель&raquo;. Поэтому информацию о человеке в понятиях &laquo;студент&raquo; и &laquo;преподаватель&raquo; целесообразно корректно представить с помощью промежуточных понятий-образов &laquo;человек-студент&raquo; и &laquo;человек-преподаватель&raquo;, полученных абстрагированием понятия &laquo;человек&raquo; путем отбрасывания несущественных свойств. Добавление понятий-образов такого вида показано на рисунке 3, где для обозначения отношения абстрагирования используем запись V1<img src="uploaded/image/2010-2/image468.gif" alt="" width="54" height="12" />&nbsp;&nbsp;&nbsp;V2, означающую, что понятие V1 является понятии- ем-образом, а понятие V2 &ndash; конкретным понятием для V1.</p>
<p>Включение в концептуальную модель ПрО понятия-образа такого типа не требует изменения схемы БД.</p>
<p>Исходный фрагмент модели ПрО, показанный на рисунке 3а, формально представляется записью</p>
<p>V1 = &lt;человек, &lt;:ФИО, :паспорт, :дата рождения, :адрес,&nbsp; :ученая степень, :звание, :рост, :вес &gt;, &AElig;&gt;</p>
<p>V2 = &lt;студент, &lt;:человек, :зачетная книжка, :группа, :специальность, :факультет&gt;,&AElig; &gt;</p>
<p>V3 = &lt;преподаватель, &lt;:человек, :кафедра, :должность&gt;, &AElig;&gt;</p>
<p>r1 =</p>
<p>r2 =</p>
<p>После включения понятий-образов &laquo;человек-студент&raquo; и &laquo;человек-преподаватель&raquo; фрагмент модели ПрО на рисунке 3б формально будет представлен записью</p>
<p>V1 = &lt;человек, &lt;:ФИО, :паспорт, :дата рождения, :адрес,&nbsp; :ученая степень, :звание, :рост, :вес&gt;, &AElig;&gt;</p>
<p>V2 = &lt;студент, &lt;:человек-студент, :зачетная книжка, :группа, :специальность, :факультет&gt;,&AElig; &gt;</p>
<p>V3 = &lt;преподаватель, &lt;:человек-преподаватель, :кафедра, :должность&gt;,&AElig;&gt;</p>
<p>V4 = &lt;человек-студент, &lt;:человек &lt;:ФИО, :паспорт, :дата рождения, :адрес &gt;&gt;, &AElig;&gt;</p>
<p>V5 = &lt;человек-преподаватель, &lt;:человек &lt;:ФИО, :паспорт, :дата рождения, :адрес, :ученая степень, :звание&gt;&gt;, &AElig;&gt;</p>
<p>r1 =</p>
<p>r2 =</p>
<p>r3 =</p>
<p>r4 =</p>
<p>Изменение системы базовых SQL-запросов будет заключаться в создании SQL-запросов для понятий-образов и модификации SQL-запросов для понятий, имеющих какую-либо связь с понятиями-образами.</p>
<p>Формирование базового SQL-запроса для понятия-образа производится путем выполнения операции проекции базового SQL-запроса, формирующего объем конкретного понятия (SQL-запро&shy;сы, приведенные в статье, соответствуют синтаксису СУБД Oracle 10g [5, 6]):</p>
<p>1) человек-студент:</p>
<p>CREATE OR REPLACE VIEW v_PERSON_STUDENT AS</p>
<p>Select FIO_VALUE, PASSPORT_VALUE, DATE_OF_ BIRTH_VALUE, ADDRESS_VALUE</p>
<p>From v_PERSON</p>
<p>2) человек-преподаватель:</p>
<p>CREATE OR REPLACE VIEW v_PERSON_TEA&shy;CHER AS</p>
<p>Select FIO_VALUE, PASSPORT_VALUE, DATE_OF_ BIRTH_VALUE, ADDRESS_VALUE, SCIENTIFIC_GRA&shy;DE_VALUE, ACADEMIC_TITLE_VALUE</p>
<p><img src="uploaded/image/2010-2/image470.gif" alt="Подпись:  
а)								б)
Рис. 3" width="300" height="165" align="left" />From v_PERSON</p>
<p>В общем случае базовый SQL-запрос для понятия-образа имеет вид</p>
<p>Select X1, X2, &hellip;, Xn</p>
<p>From v_V</p>
<p>где X1, X2, &hellip;, Xn &ndash; свойства, которыми обладают объекты понятия-образа; v_V &ndash; базовый SQL-за&shy;прос, формирующий объем конкретного понятия.</p>
<p>Модификация SQL-запросов для понятий, использующих образы, заключается в естественном соединении отношения, содержащего информацию об объектах этого понятия, и базового SQL-запроса, формирующего объем понятия-образа. Например, базовый SQL-запрос для понятия &laquo;студент&raquo; представляется в следующем виде:</p>
<p>CREATE OR REPLACE VIEW v_STUDENT AS</p>
<p>Select *</p>
<p>From STUDENT Natural Join v_PERSON_STUDENT</p>
<p>Аналогично базовый SQL-запрос для понятия &laquo;преподаватель&raquo; представляется в виде:</p>
<p>CREATE OR REPLACE VIEW v_TEACHER AS</p>
<p>Select *</p>
<p>From TEACHER Natural Join v_PERSON_TEA&shy;CHER</p>
<p>С другой стороны, огрубление свойств может осуществляться усреднением их значений для множества однотипных объектов. При этом следует отметить, что возможны следующие варианты усреднения: логическое, арифметическое, статистическое и др.</p>
<p>Например, в концептуальной модели ПрО, содержащей понятие &laquo;преподаватель&raquo;, создадим понятия-образы &laquo;кандидат на должность доцента&raquo; и &laquo;кандидат на должность профессора&raquo; путем логического усреднения значений определенных свойств конкретного понятия. Тогда понятие &laquo;кандидат на должность доцента&raquo; будет включать всех преподавателей, не работающих в должности доцента:</p>
<p>&ndash;&nbsp;докторов, кандидатов наук и не имеющих степени,</p>
<p>&ndash;&nbsp;имеющих звание доцента и не имеющих звания,</p>
<p>&ndash;&nbsp;имеющих необходимый преподавательский стаж или не имеющих его и др.,</p>
<p>а понятие &laquo;кандидат на должность профессора&raquo; будет включать всех преподавателей, не работающих в должности профессора: докторов и кандидатов наук, а также имеющих звание профессора или доцента и др.</p>
<p>Включение в концептуальную модель ПрО понятия-образа данного типа также не требует изменения схемы БД.</p>
<p>Измененный фрагмент модели ПрО формально будет представлен записью</p>
<p>V1 = &lt;преподаватель, &lt;:ФИО, :паспорт, :дата рождения, :адрес,&nbsp; :ученая степень, :звание, :кафедра, :должность&gt;, &AElig;&gt;</p>
<p>V2 = &lt;кандидат на должность доцента, &lt;:преподаватель&gt;, должность &sup1; &laquo;доцент&raquo; и (степень = &laquo;кандидат наук&raquo; или &laquo;доктор наук&raquo;) и (звание = &laquo;доцент&raquo; или (звание = &AElig;&nbsp; и стаж &gt;5 лет))&gt;</p>
<p>V3 = &lt;кандидат на должность профессора, &lt;:преподаватель&gt;, должность &sup1; &laquo;профессор&raquo; и (степень = &laquo;кандидат наук&raquo; или &laquo;доктор наук&raquo;) и (звание = &laquo;доцент&raquo; или &laquo;профессор&raquo;)&gt;</p>
<p>r1 =</p>
<p>r2 =</p>
<p>Изменение системы базовых SQL-запросов будет заключаться в создании базовых SQL-запросов для понятий-образов путем добавления к базовому SQL-запросу конкретного понятия соответствующего предиката. Например,</p>
<p>1)&nbsp;кандидат на должность доцента:</p>
<p>CREATE OR REPLACE VIEW v_CANDIDATE_TO_ ASSOCIATE_PROF AS</p>
<p>Select *</p>
<p>From v_TEACHER</p>
<p>Were POSITION_VALUE != 'Доцент' and SCIENTI&shy;FIC_ GRADE_VALUE IN ('Кандидат наук', 'Доктор наук') and (ACADEMIC_TITLE_VALUE = 'Доцент' or (ACADE&shy;MIC_TITLE_VALUE=NULL and EXPERIENCE_VALUE&gt; 5))</p>
<p>(атрибут EXPERIENCE_VALUE (стаж) отсутствует в схеме БД, поэтому предполагается, что он вычисляется на основании даты приема преподавателя на работу);</p>
<p>2)&nbsp;кандидат на должность профессора:</p>
<p>CREATE OR REPLACE VIEW v_CANDIDATE_TO_ PROFESSOR AS</p>
<p>Select *</p>
<p>From v_TEACHER</p>
<p>Were POSITION_VALUE != 'Профессор' and SCIENTI&shy;FIC_GRADE_VALUE IN ('Кандидат наук', 'Доктор наук') and ACADEMIC_TITLE_VALUE IN ('Доцент', 'Профессор')</p>
<p>В общем случае базовый SQL-запрос для понятия-образа данного типа имеет вид</p>
<p>Select *</p>
<p>From v_V</p>
<p>Were P</p>
<p>где P &ndash; соответствующий предикат.</p>
<p>Еще один вариант абстрагирования заключается в формировании обобщенного образа со статистическими характеристиками определенного множества объектов конкретного понятия (статистическое усреднение). Например, сформируем образ со статистической оценкой успеваемости определенного контингента студентов.</p>
<p>Для формирования успеваемости студентов необходимо определить контингент студентов и полученные оценки за требуемые сессии, разбить его на категории в соответствии с полученными оценками и задать правила вычисления статистических оценок успеваемости.</p>
<p>Формирование объема понятия &laquo;успеваемость студентов&raquo; определяется предикатом P, задающим характеристики студентов, включаемых в выборку (например, выделение студентов некоторой группы, специальности, курса и др.), и требуемые сессии.</p>
<p>Разбиение контингента студентов на категории осуществляется в соответствии с имеющимися у студентов оценками, совпадающими с категорией успеваемости (например, имеющие тройки, обучающиеся только на четыре, обучающиеся на четыре и пять и др.).</p>
<p>Вычисление статистической оценки успеваемости по соответствующей категории задается формулой: количество студентов, соответствующих категории, деленное на общее количество студентов и умноженное на 100.</p>
<p>На основе этих данных система сформирует следующий базовый SQL-запрос для понятия-образа &laquo;успеваемость студентов&raquo;:</p>
<p>CREATE OR REPLACE VIEW v_STUDENTS_SUMMA&shy;RY_RESULTS AS  WITH contingent AS (select * from v_MARK where P),</p>
<p>student_3 AS (select ID_STUDENT, MIN(MARK_VA&shy;LUE) min_mark, MAX(MARK_VALUE) max_mark from contingent group by ID_STUDENT having min_mark = 3 and max_mark = 3),</p>
<p>student_3_4 AS (select ID_STUDENT, MIN(MARK_VALUE) min_mark, MAX(MARK_VA&shy;LUE) max_mark from contingent group by ID_STU&shy;DENT having min_mark = 3 and max_mark = 4),</p>
<p>student_4 AS (select ID_STUDENT, MIN(MARK_VA&shy;LUE) min_mark, MAX(MARK_VALUE) max_mark from contingent group by ID_STUDENT having min_mark = 4 and max_mark = 4),</p>
<p>student_4_5 AS (select ID_STUDENT, MIN(MARK_VA&shy;LUE) min_mark, MAX(MARK_VALUE) max_mark from contingent group by ID_STUDENT having min_mark = 4 and max_mark = 5),</p>
<p>student_5 AS (select ID_STUDENT, MIN(MARK_VA&shy;LUE) min_mark, MAX(MARK_VALUE) max_mark from contingent group by ID_STUDENT having min_mark = 5 and max_mark = 5),</p>
<p>count_all AS (select count(distinct ID_STUDENT) a from contingent)</p>
<p>select</p>
<p>(select a from count_all) as cnt_all,</p>
<p>(select count(*) from student_3) as cnt_3,</p>
<p>(select count(*) from student_3) / (select a from count_ all) *100 as prc_3,</p>
<p>(select count(*) from student_3_4) as cnt_3_4,</p>
<p>(select count(*) from student_3_4) / (select a from count_ all) *100 as prc_3_4,</p>
<p>(select count(*) from student_4) as cnt_4,</p>
<p>(select count(*) from student_4) / (select a from count_ all) *100 as prc_4,</p>
<p>(select count(*) from student_4_5) as cnt_4_5,</p>
<p>(select count(*) from student_4_5) / (select a from count_ all) *100 as prc_4_5,</p>
<p>(select count(*) from student_5) as cnt_5,</p>
<p>(select count(*) from student_5) / (select a from count_ all) *100 as prc_5</p>
<p>FROM contingent where rownum = 1;</p>
<p>Дадим некоторые пояснения к приведенному запросу. Подзапрос contingent формирует контингент студентов в соответствии с условием P (например, если P заменить на выражение FACUL&shy;TY_VALUE = 'ФЭМИ' and ACADEMIC_SUBJECT_VALUE = 'Информатика' and EXAMS_SESSION_VALUE=1, то контингент студентов будет включать только тех студентов факультета ФЭМИ, у которых в первой сессии был экзамен по информатике).</p>
<p>Следующие подзапросы формируют списки студентов из выделенного контингента, которые учатся:</p>
<p>-&nbsp;&nbsp;&nbsp; только на &laquo;удовлетворительно&raquo; &ndash; stu&shy;dent_3,</p>
<p>-&nbsp;&nbsp;&nbsp; на &laquo;удовлетворительно&raquo; и &laquo;хорошо&raquo; &ndash; student_3_4,</p>
<p>-&nbsp;&nbsp;&nbsp; только на &laquo;хорошо&raquo; &ndash; student_4,</p>
<p>-&nbsp;&nbsp;&nbsp; на &laquo;хорошо&raquo; и &laquo;отлично&raquo; &ndash; student_4_5,</p>
<p>-&nbsp;&nbsp;&nbsp; только на &laquo;отлично&raquo; &ndash; student_5.</p>
<p>И наконец, результирующий запрос будет содержать 11 показателей (cnt_all, cnt_3, prc_3, cnt_3_4, prc_3_4, cnt_4, prc_4, cnt_4_5, prc_4_5, cnt_5, prc_5), отражающих количественную и процентную разбивку выделенного контингента студентов (contingent) по категориям успеваемости.</p>
<p>Разработанный метод позволяет на основе понятий-образов, представляющих собой агрегированные количественные оценки, создавать понятия-образы, выражающие обобщенные качественные характеристики большого количества групп однотипных объектов. Например, на основе полученных выше статистических оценок успеваемости заданного контингента студентов определим качество этого контингента с точки зрения обучения. Для этого сформируем понятие &laquo;качество контингента студентов&raquo;.</p>
<p>Предположим, пользователь задает некоторое правило, на основании которого определяется содержание понятия-образа &laquo;качество контингента студентов&raquo;, например: не менее 75&nbsp;% студентов учатся только на оценку &laquo;5&raquo;, а остальные на &laquo;4&raquo; или &laquo;5&raquo; &ndash; отличное качество контингента; не менее 85&nbsp;% студентов учатся на оценки &laquo;4&raquo; или &laquo;5&raquo;, а остальные имеют оценки &laquo;3&raquo; &ndash; хорошее качество контингента; не менее 95&nbsp;% студентов учатся на оценки &laquo;3&raquo;, &laquo;4&raquo; или &laquo;5&raquo; &ndash; удовлетворительное качество контингента; в противном случае &ndash; неудовлетворительное. Задаваемые таким образом правила могут быть произвольными и достаточно сложными. На основе этих данных система сформирует следующий базовый SQL-запрос для понятия-образа &laquo;качество контингента студентов&raquo;:</p>
<p>CREATE OR REPLACE VIEW v_QUALITY_STUD_ CONT AS</p>
<p>Select case</p>
<p>when prc_5 &gt;= 75 and cnt_all &ndash; cnt_5 = cnt_4_5 + cnt_4 then 'отличное качество'</p>
<p>when prc_5 + prc_4_5 + prc_4 &gt;= 85 and cnt_all &ndash; (cnt_5 + cnt_4_5 + cnt_4) = cnt_3 + cnt_3_4 then 'хорошее качество'</p>
<p>when prc_5 + prc_4_5 + prc_4 + prc_3_4 + prc_3 &gt;= 95 then 'удовлетворительное качество'</p>
<p>else ' неудовлетворительное качество'</p>
<p>end as 'качество контингента студентов'</p>
<p>From v_STUDENTS_SUMMARY_RESULTS</p>
<p>Подобным образом может быть сформирован очень широкий набор понятий-образов, а также создана иерархия или сеть понятий-образов, задающая мощную обработку данных и предоставляющая пользователям данные с высокой степенью абстрагирования и обобщения.</p>
<p>Еще один вариант абстрагирования заключается в формировании понятия-образа с интегральными характеристиками определенного множества объектов конкретного понятия. Например, сформируем понятие-образ &laquo;вид диплома&raquo;, создаваемый на основании интегральных показателей успеваемости студента за весь период обучения в вузе, включая оценки за государственные экзамены и за дипломный проект.</p>
<p>Пользователь задает правило, на основании которого определяется вид диплома для каждого студента:</p>
<p>1)&nbsp; красный диплом: процент оценок &laquo;отлично&raquo; за весь период обучения больше или равен 75 и количество оценок &laquo;удовлетворительно&raquo; за весь период обучения равен 0 и процент оценок &laquo;отлично&raquo; за государственные экзамены равен 100 и оценка за дипломный проект равна 5;</p>
<p>2)&nbsp; синий диплом &ndash; иначе.</p>
<p>На основе этих данных система сформирует следующий базовый SQL-запрос для понятия-образа &laquo;вид диплома&raquo;:</p>
<p>CREATE OR REPLACE VIEW v_DIPLOMA_TYPE AS</p>
<p>Select criteria.*,</p>
<p>case</p>
<p>when prc_5_study &gt;= 75 and cnt_3_study = 0 and diploma_mark = 5 and prc_5_state_exams = 100 then 'красный диплом'</p>
<p>else&nbsp; 'синий диплом'</p>
<p>end as 'вид диплома'</p>
<p>From (</p>
<p>WITH stud AS (Select * From v_STUDENT s where exists (select * from v_MARK where ID_STU&shy;DENT = s.ID_STUDENT and EXAMS_SES&shy;SION_VALUE = 'Государственный экзамен' and MARK_VALUE is not NULL) and exists (select * from v_MARK where ID_STUDENT = s.ID_STU&shy;DENT and ACADEMIC_SUBJECT_VALUE = 'Дипломный проект' and MARK_VALUE is not NULL))</p>
<p>Select&nbsp;&nbsp; FIO_VALUE,</p>
<p>((select count(*) from v_MARK where ID_STUDENT = stud.ID_STUDENT and MARK_VALUE = 5 and ACADEMIC_SUBJECT_VALUE != 'Дипломный проект' and EXAMS_SESSION_VALUE != 'Го&shy;сударственный экзамен') / (select count(*) from v_MARK where ID_STUDENT = stud.ID_STU&shy;DENT and ACADEMIC_SUBJECT_VALUE != 'Дипломный проект' and EXAMS_SES&shy;SION_VALUE != 'Государственный экзамен') * 100) as prc_5_study,</p>
<p>(select count(*) from v_MARK where ID_STUDENT = stud.ID_STUDENT and MARK_VALUE = 3 and ACADEMIC_SUBJECT_VALUE != 'Дипломный проект' and EXAMS_SESSION_VALUE != 'Го&shy;сударственный экзамен') as cnt_3_study,</p>
<p>(select MARK_VALUE from v_MARK where ID_STUDENT = stud.ID_STUDENT and ACADE&shy;MIC_SUBJECT_VALUE = 'Дипломный проект') as diploma_mark,</p>
<p>((select count(*) from v_MARK where ID_STUDENT = stud.ID_STUDENT and MARK_VALUE = 5 and EXAMS_SESSION_VALUE = 'Государственный экзамен') / (select count(*) from v_MARK where ID_STUDENT = stud.ID_STUDENT and EXAMS_SESSION_VALUE = 'Государственный экзамен') * 100) as prc_5_state_exams</p>
<p>From stud) criteria;</p>
<p>Пояснения к запросу. Подзапрос stud формирует список студентов, которые защитили диплом и сдали все государственные экзамены. Следующие подзапросы формируют критерии, на основании которых будет вычислен тип диплома для каждого студента:</p>
<p>1)&nbsp; процент оценок &laquo;отлично&raquo; за весь период обучения в вузе &ndash; prc_5_study,</p>
<p>2)&nbsp; количество оценок &laquo;удовлетворительно&raquo; за весь период обучения в вузе &ndash; cnt_3_study,</p>
<p>3)&nbsp; оценка за дипломный проект &ndash; diploma_mark,</p>
<p>4)&nbsp; процент оценок &laquo;отлично&raquo; за государственные экзамены &ndash; prc_5_state_exams.</p>
<p><img src="uploaded/image/2010-2/image472.gif" alt="Подпись:  
Рис. 4" width="298" height="144" align="left" />Результирующий запрос будет содержать Ф.И.О. студента, вышеперечисленные критерии для каждого студента и вид полученного студентом диплома.</p>
<p>В общем случае для формирования образов может использоваться базовый SQL-запрос, представляющий собой систему взаимосвязанных SQL-запросов, включающую</p>
<p>1)&nbsp;основной запрос:</p>
<p>Select f1 as X1, f2 as X2, &hellip;, fn as Xn</p>
<p>From v_V</p>
<p>Where P</p>
<p>2)&nbsp;дополнительные вычисления:</p>
<p>а)&nbsp;&nbsp;Name1 Select f1' as X'1, f2' as X'2, &hellip;, fn' as X'n</p>
<p>From #</p>
<p>Where P1</p>
<p>б)&nbsp;&nbsp;Name2 Select f1" as X"1, f2" as X"2, &hellip;, fn" as X"n</p>
<p>From #</p>
<p>Where P2</p>
<p>&hellip;</p>
<p>где fi &ndash; некая функция формирования значений свойства Xi, которая может иметь следующий вид:</p>
<p>Name &ndash; имя свойства из понятия v_V;</p>
<p>&phi;(v_V.X) &ndash; аналитическая зависимость вычисления значений свойства Xi на основе значений свойств X понятия v_V;</p>
<p>case &ndash; значение свойства Xi, соответствующее выполнению определенного условия;</p>
<p># &ndash; источник данных, сформированный предикатом P в основном запросе.</p>
<p>Рассмотрим примеры добавления в модель ПрО новых конкретных понятий для имеющегося понятия-образа.</p>
<p>Включение в концептуальную модель ПрО нового конкретного понятия с несущественными свойствами относительно понятия-образа предполагает включение понятия, содержащего как важные свойства понятия-образа, так и несущественные. Предположим, что в модели ПрО существует понятие &laquo;студент-отличник&raquo;. Тогда определим конкретное понятие &laquo;студент&raquo; для понятия-образа &laquo;студент-отличник&raquo;. При этом несущественными свойствами у понятия &laquo;студент&raquo; будут &laquo;оценки по дисциплинам&raquo; и &laquo;стипендия&raquo;.</p>
<p>Измененный фрагмент ПрО формально представляется записью:</p>
<p>V1 = &lt;студент-отличник, &lt;:человек, :зачетка, :группа, :специальность, :факультет&gt;, &AElig;&gt;</p>
<p>V2 = &lt;студент, &lt;:человек, :зачетка, :группа, :спе&shy;циальность, :факультет, :оценки, :стипендия&gt;, &AElig;&gt;</p>
<p>r1 =</p>
<p>Включение конкретного понятия &laquo;студент&raquo; в концептуальную модель ПрО требует изменения схемы БД для хранения информации об объектах конкретного понятия. Причем данный вариант БД будет далек от оптимального, однако это является задачей уровня организации данных. Пример схемы БД для рассматриваемого фрагмента модели ПрО до включения конкретного понятия &laquo;студент&raquo; приведен на рисунке 4, а после включения этого понятия &ndash; на рисунке 5.</p>
<p>Модификация системы базовых SQL-запросов будет заключаться в создании SQL-запроса для конкретного понятия и модификации SQL-запроса для понятия-образа.</p>
<p>Формирование базового SQL-запроса для конкретного понятия производится путем выборки всех данных из отношения, содержащего объекты конкретного понятия. Например, базовый SQL-запрос для понятия &laquo;студент&raquo; представляется в виде</p>
<p><img src="uploaded/image/2010-2/image475.gif" alt="Подпись:  
Рис. 6
															
 
Рис. 7" width="296" height="347" align="left" />CREATE OR REPLACE VIEW v_STUDENT AS</p>
<p>Select *</p>
<p>From STUDENT</p>
<p>В общем случае базовый SQL-запрос для конкретного понятия имеет вид:</p>
<p>Select *</p>
<p>From R</p>
<p>где R &ndash; отношение, содержащее объекты конкрет&shy;ного понятия.</p>
<p>Модификация базового SQL-запроса для понятия-образа производится путем естественного соединения отношения, содержащего объекты понятия-образа, с базовым SQL-запросом, формирующим объем конкретного понятия, и проекции на набор свойств, соответствующих понятию-образу. Например, базовый SQL-запрос для понятия &laquo;студент-отличник&raquo; представляется в виде</p>
<p>CREATE OR REPLACE VIEW v_EXCELLENT_STU&shy;DENT AS</p>
<p>Select FIO_VALUE, ADDRESS_VALUE, PAS&shy;SPORT_VALUE, DATE_OF_BIRTH_VALUE, STUDENTS_RECORD_BOOK_VA&shy;LUE, STUDENTS_GROUP_VALUE, PROFESSION_ VALUE, FACULTY_VALUE</p>
<p>From EXCELLENT_STUDENT Natural Join v_STU&shy;DENT</p>
<p>В общем случае базовый SQL-запрос для понятия-образа имеет вид:</p>
<p>Select X1, X2, &hellip;, Xn</p>
<p>From R Join v_V</p>
<p>где R &ndash; отношение, содержащее объекты понятия-образа; v_V &ndash; базовый SQL-запрос, формирующий объем конкретного понятия.</p>
<p>Включение в концептуальную модель ПрО нового конкретного понятия, соответствующего понятию-образу, полученному путем усреднения значений свойств, предполагает включение понятия со значениями, конкретизирующими значения усредненных свойств. Например, определим конкретное понятие &laquo;студент&raquo; для понятия-образа &laquo;успевающий студент&raquo;. При этом свойство &laquo;оценки&raquo; у понятия &laquo;студент&raquo; будут принимать конкретные значения &laquo;5&raquo;, &laquo;4&raquo;, &laquo;3&raquo; или &laquo;2&raquo;.</p>
<p>Измененный фрагмент модели ПрО формально представляется записью</p>
<p>V1 = &lt;успевающий студент, &lt;:человек, :зачетка, :группа, :специальность, :факультет&gt;, &AElig;&gt;</p>
<p>V2 = &lt;студент, &lt;:человек, :зачетка, :группа, :спе&shy;циальность, :факультет, :оценки&gt;, &AElig;&gt;</p>
<p>r1 =</p>
<p>Включение конкретного понятия &laquo;студент&raquo; в концептуальную модель ПрО требует изменения схемы БД для хранения информации об объектах конкретного понятия (фрагмент исходной схемы БД (рис. 2) для случая, когда изначально была создана таблица ADVANCED_STUDENT для хранения объектов понятия &laquo;успевающий студент&raquo;, представлен на рисунке 6; фрагмент схемы БД после включения в модель ПрО конкретного понятия &laquo;студент&raquo; &ndash; на рисунке 7). Причем данный вариант БД будет тоже далек от оптимального, однако это задача уровня организации данных.</p>
<p>Изменение системы базовых SQL-запросов будет заключаться в изменении базового SQL-за&shy;проса для понятия-образа и в создании базового SQL-запроса для конкретного понятия.</p>
<p>Формирование базового SQL-запроса для конкретного понятия производится путем выборки всех данных из отношения, представляющего объекты конкретного понятия. Например, базовый SQL-запрос для понятия &laquo;студент&raquo; представляется в виде:</p>
<p>CREATE OR REPLACE VIEW v_STUDENT AS</p>
<p>Select *</p>
<p>From STUDENT</p>
<p>В общем случае базовый SQL-запрос для конкретного понятия имеет вид</p>
<p>Select *</p>
<p>From R</p>
<p>где R &ndash; отношение, содержащее объекты конкретного понятия.</p>
<p>Модификация базового SQL-запроса для понятия-образа производится путем естественного соединения отношения, хранящего информацию об объектах понятия-образа, с базовым SQL-за&shy;просом для конкретного понятия и введения предиката, выделяющего требуемые объекты из множества объектов конкретного понятия. Например, SQL-запрос для понятия &laquo;успевающий студент&raquo; представляется в виде</p>
<p>CREATE OR REPLACE VIEW v_ADVANC&shy;ED_STU&shy;DENT AS</p>
<p>WITH adv_std AS (Select * From ADVANCED_STU&shy;DENT Natural Join v_STUDENT)</p>
<p>Select *</p>
<p>From adv_std</p>
<p>Where exists (select ID_STUDENT, MIN(MARK_ VALUE) min_mark, MAX(MARK_VALUE) max_mark from v_MARK where ID_STU&shy;DENT = adv_std.ID_STUDENT group by ID_STUDENT having min_mark = 3 and max_mark = 5)</p>
<p>В общем случае базовый SQL-запрос для понятия-образа имеет вид</p>
<p>Select *</p>
<p>From R Join v_V</p>
<p>Where P</p>
<p>где R &ndash; отношение, содержащее объекты понятия-образа; v_V &ndash; базовый SQL-запрос, формирующий объем конкретного понятия; P &ndash; предикат, формирующий объем понятия-образа.</p>
<p>Рассмотренные варианты применения обобщенной операции абстрагирования позволяют получать принципиально новые представления ПрО, имеющие существенно более высокий уровень абстрагирования и обобщения, чем в существующих ИС. Поддержка отношения абстрагирования делает СИС открытой для формирования специфических типов объектов, обладающих большой выразительной способностью для представления объектов реального мира, а пользователям предоставляет мощные средства для адекватного моделирования ПрО.</p>
<p>Таким образом, реализация отношения абстрагирования делает СИС открытой на уровне концептуального моделирования ПрО.</p>
<p>Литература</p>
<p>1.&nbsp;Чарнецки К., Айзенекер У. Порождающее программирование. Методы, инструменты, применение.&nbsp; СПб: ПИТЕР, 2005. 731 с.</p>
<p>2.&nbsp;Войшвилло Е.К., Дегтярев М.Г. Логика: учеб. для студ. вузов. М.: Изд-во ВЛАДОС-ПРЕСС, 2001. 528 с.</p>
<p>3.&nbsp;Зинченко Р.Е. Системно-изоморфное динамическое соответствие концептуальной модели предметной области и схемы базы данных // Программные продукты и системы. 2010.  № 1. С. 71&ndash;75.</p>
<p>4.&nbsp;Дрождин В.В., Зинченко Р.Е. Системный подход к концептуальному моделированию предметной области в самоорганизующейся информационной системе // Программные продукты и системы. 2009. № 4. С. 73&ndash;79.</p>
<p>5.&nbsp;Том Кайт. Oracle для профессионалов. Кн. 1. Архитектура и основные особенности. М.: &laquo;ДиаСофтЮП&raquo;, 2005. 656 с.</p>
<p>6.&nbsp;Том Кайт. Oracle для профессионалов. Кн. 2. Расширение возможностей и защита. М.: &laquo;ДиаСофтЮП&raquo;, 2005. 816 с.</p></div><br /></td></tr></table><table border="0" width="100%" style="width:100%;">
                   <tr>
                      <td><b>Постоянный адрес статьи: http://swsys.ru/index.php?page=article&id=2521</b></td>
                      <td align="right"><a target="_blank" href="/print/article_print.php?id=2521">Версия для печати</a></td>
                   </tr>
                   <tr>
                      <td><b>Статья опубликована в выпуске журнала № 2 за 2010 год.</b></td>                      
                                  </tr>            <tr><td><a href="http://swsys.ru/pay/form.php?journal=90">Электронная подписка на данный выпуск в формате PDF</a>            </tr></td>              
          </table><br /><a href="javascript:history.back();">Назад, к списку статей</a><br /><br />Хотите оценить статью или опубликовать комментарий к ней - <a href="http://swsys.ru/index.php?page=registry">зарегистрируйтесь</a><br /><br />




				
				<div id="ie_clearing">&nbsp;</div>
				<!-- End: IE Column Clearing -->
				
			</div>
			<!-- end: #col3 -->
            
         
            
		</div>
        
		<!-- end: #main -->
		<!-- begin: #footer -->


         </div>


		<div id="footer">

			<div class="black">Журнал зарегистрирован в комитете РФ по печати</div><div style="margin:0px; padding:0px; line-height:16px">
			Свидетельство о регистрации средства массовой информации № 013831 от 26.11.99 г.<br />
			Решение Президиума Высшей аттестационной комиссии Министерства образования и науки РФ от 19.02.2010 г. (о внесении в Перечень ведущих рецензируемых научных журналов и изданий, в которых должны быть опубликованы основные научные результаты диссертаций на соискание ученых степеней кандидата и доктора наук).<br />
&copy; Все права на авторские материалы охраняются в соответствии с законодательством РФ. Перепечатка возможна только с разрешения редакции. При цитировании материалов обязательна ссылка на Международный журнал "Программные продукты и системы" (для on-line проектов обязательна гиперссылка).</div>
			

			<div style="margin-top:15px;float:left">
<!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='http://www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t26.1;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+
"' alt='' title='LiveInternet: показано число посетителей за"+
" сегодня' "+
"border=0 width=88 height=15><\/a>")//--></script><!--/LiveInternet-->
			</div>

			<div align="right" style="margin:15px">
               <a target="_blank" href="http://www.cps.tver.ru">Сайт разработан в <span>НИИ &laquo;ЦЕНТРПРОГРАММСИСТЕМ&raquo;</span></a><br />
               <a href="http://swsys.ru/index.php?page=17">Информация о сайте</a>
            </div>

		</div>		
		<!-- end: #footer -->



	</div>

</div>



<style>

.reklama {
    color: #666;
   font-size:11px;
   font-family:Arial;
  padding-bottom:20px;
}
.reklama a {
    color: #666;
   text-decoration:underline;
}
.reklama a:hover {
    color: #000;
   text-decoration:none;
}
 

@media print {
  .reklama {
      display:none;
  }
}

</style>




</div>


 






<script type="text/javascript">
/*
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
*/
</script>
<script type="text/javascript">
/*
try {
var pageTracker = _gat._getTracker("UA-9821437-1");
pageTracker._trackPageview();
} catch(err) {}
*/
</script>

</body>
</html>
